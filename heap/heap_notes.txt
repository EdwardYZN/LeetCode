******************************kth-smallest-element-in-a-sorted-matrix
 Given a n x n matrix where each of the rows and columns are sorted in ascending
order, find the kth smallest element in the matrix.  Note that it is the kth
smallest element in the sorted order, not the kth distinct element.  Example:
matrix = [
[ 1,  5,  9],
[10, 11, 13],
[12, 13, 15]
],
k = 8,
return 13.   Note: You may assume k is always valid, 1 ≤ k ≤ n 2 .   Subscribe
to see which companies asked this question    Show Tags   Binary Search  Heap
Show Similar Problems   (M) Find K Pairs with Smallest Sums

******************************super-ugly-number
 Write a program to find the n th super ugly number.  Super ugly numbers are
positive numbers whose all prime factors are in the given prime list primes of
size k . For example, [1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32] is the
sequence of the first 12 super ugly numbers given primes = [2, 7, 13, 19] of
size 4.   Note: (1) 1 is a super ugly number for any given primes . (2) The
given numbers in primes are in ascending order. (3) 0 < k &le; 100, 0 < n &le;
10 6 , 0 < primes[i] < 1000.  Credits: Special thanks to @dietpepsi for adding
this problem and creating all test cases.   Subscribe to see which companies
asked this question    Show Tags   Math  Heap     Show Similar Problems   (M)
Ugly Number II

******************************merge-k-sorted-lists
 Merge k sorted linked lists and return it as one sorted list. Analyze and
describe its complexity.   Subscribe to see which companies asked this question
Show Tags   Divide and Conquer  Linked List  Heap     Show Similar Problems
(E) Merge Two Sorted Lists  (M) Ugly Number II

******************************find-median-from-data-stream
 Median is the middle value in an ordered integer list. If the size of the list
is even, there is no middle value. So the median is the mean of the two middle
value. Examples:  [2,3,4] , the median is 3  [2,3] , the median is (2 + 3) / 2 =
2.5   Design a data structure that supports the following two operations:   void
addNum(int num) - Add a integer number from the data stream to the data
structure.  double findMedian() - Return the median of all elements so far.
For example:  add(1)
add(2)
findMedian() -> 1.5
add(3)
findMedian() -> 2  Credits: Special thanks to @Louis1992 for adding this problem
and creating all test cases.   Subscribe to see which companies asked this
question    Show Tags   Heap  Design

******************************the-skyline-problem
 A city's skyline is the outer contour of the silhouette formed by all the
buildings in that city when viewed from a distance. Now suppose you are given
the locations and height of all the buildings as shown on a cityscape photo
(Figure A), write a program to output the skyline formed by these buildings
collectively (Figure B).  Cityscape     Use this image for the 'turning point'
description of skyline     Use the following image if we'd like to define the
output as 'horizontal lines' rather than 'turning points'  <a
href="http://tinypic.com?ref=mij3wi" target="_blank">
<img style="max-width: 45%;" src="http://i59.tinypic.com/mij3wi.jpg" border="0"
alt="Skyline Contour">
</a>  The geometric information of each building is represented by a triplet of
integers [Li, Ri, Hi] , where Li and Ri are the x coordinates of the left and
right edge of the ith building, respectively, and Hi is its height. It is
guaranteed that 0 ≤ Li, Ri ≤ INT_MAX , 0 < Hi ≤ INT_MAX , and Ri - Li > 0 . You
may assume all buildings are perfect rectangles grounded on an absolutely flat
surface at height 0.  For instance, the dimensions of all buildings in Figure A
are recorded as: [ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] .  The
output is a list of " key points " (red dots in Figure B) in the format of [
[x1,y1], [x2, y2], [x3, y3], ... ] that uniquely defines a skyline. A key point
is the left endpoint of a horizontal line segment . Note that the last key
point, where the rightmost building ends, is merely used to mark the termination
of the skyline, and always has zero height. Also, the ground in between any two
adjacent buildings should be considered part of the skyline contour. For
instance, the skyline in Figure B should be represented as: [ [2 10], [3 15], [7
12], [12 0], [15 10], [20 8], [24, 0] ] .  Notes:   The number of buildings in
any input list is guaranteed to be in the range [0, 10000] .  The input list is
already sorted in ascending order by the left x position Li .  The output list
must be sorted by the x position.  There must be no consecutive horizontal lines
of equal height in the output skyline. For instance, [...[2 3], [4 5], [7 5],
[11 5], [12 7]...] is not acceptable; the three lines of height 5 should be
merged into one in the final output as such: [...[2 3], [4 5], [12 7], ...]
Credits: Special thanks to @stellari for adding this problem, creating these two
awesome images and all test cases.   Subscribe to see which companies asked this
question    Show Tags   Binary Indexed Tree  Segment Tree  Heap  Divide and
Conquer

******************************sliding-window-maximum
 Given an array nums , there is a sliding window of size k which is moving from
the very left of the array to the very right. You can only see the k numbers in
the window. Each time the sliding window moves right by one position.  For
example, Given nums = [1,3,-1,-3,5,3,6,7] , and k = 3.  Window position
Max
---------------               -----
[1  3  -1] -3  5  3  6  7       3
1 [3  -1  -3] 5  3  6  7       3
1  3 [-1  -3  5] 3  6  7       5
1  3  -1 [-3  5  3] 6  7       5
1  3  -1  -3 [5  3  6] 7       6
1  3  -1  -3  5 [3  6  7]      7  Therefore, return the max sliding window as
[3,3,5,5,6,7] .  Note: You may assume k is always valid, ie: 1 ≤ k ≤ input
array's size for non-empty array.  Follow up: Could you solve it in linear time?
How about using a data structure such as deque (double-ended queue)?  The queue
size need not be the same as the window’s size.  Remove redundant elements and
the queue should store only elements that need to be considered.    Subscribe to
see which companies asked this question    Show Tags   Heap     Show Similar
Problems   (H) Minimum Window Substring  (E) Min Stack  (H) Longest Substring
with At Most Two Distinct Characters  (H) Paint House II

******************************ugly-number-ii
 Write a program to find the n -th ugly number.  Ugly numbers are positive
numbers whose prime factors only include 2, 3, 5 . For example, 1, 2, 3, 4, 5,
6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.  Note that 1 is
typically treated as an ugly number.   The naive approach is to call isUgly for
every number until you reach the n th one. Most numbers are not ugly. Try to
focus your effort on generating only the ugly ones.  An ugly number must be
multiplied by either 2, 3, or 5 from a smaller ugly number.  The key is how to
maintain the order of the ugly numbers. Try a similar approach of merging from
three sorted lists: L 1 , L 2 , and L 3 .  Assume you have U k , the k th ugly
number. Then U k+1 must be Min(L 1 * 2, L 2 * 3, L 3 * 5).   Credits: Special
thanks to @jianchao.li.fighter for adding this problem and creating all test
cases.   Subscribe to see which companies asked this question    Show Tags
Dynamic Programming  Heap  Math     Show Similar Problems   (H) Merge k Sorted
Lists  (E) Count Primes  (E) Ugly Number  (M) Perfect Squares  (M) Super Ugly
Number

******************************find-k-pairs-with-smallest-sums
 You are given two integer arrays nums1 and nums2 sorted in ascending order and
an integer k .  Define a pair (u,v) which consists of one element from the first
array and one element from the second array.  Find the k pairs (u 1 ,v 1 ),(u 2
,v 2 ) ...(u k ,v k ) with the smallest sums.  Example 1:  Given nums1 =
[1,7,11], nums2 = [2,4,6],  k = 3
Return: [1,2],[1,4],[1,6]
The first 3 pairs are returned from the sequence:
[1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]   Example 2:  Given
nums1 = [1,1,2], nums2 = [1,2,3],  k = 2
Return: [1,1],[1,1]
The first 2 pairs are returned from the sequence:
[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]   Example 3:  Given nums1
= [1,2], nums2 = [3],  k = 3
Return: [1,3],[2,3]
All possible pairs are returned from the sequence:
[1,3],[2,3]   Credits: Special thanks to @elmirap and @StefanPochmann for adding
this problem and creating all test cases.   Subscribe to see which companies
asked this question    Show Tags   Heap     Show Similar Problems   (M) Kth
Smallest Element in a Sorted Matrix

******************************kth-largest-element-in-an-array
 Find the k th largest element in an unsorted array. Note that it is the kth
largest element in the sorted order, not the kth distinct element. For example,
Given [3,2,1,5,6,4] and k = 2, return 5.  Note: You may assume k is always
valid, 1 ≤ k ≤ array's length.  Credits: Special thanks to @mithmatt for adding
this problem and creating all test cases.   Subscribe to see which companies
asked this question    Show Tags   Heap  Divide and Conquer     Show Similar
Problems   (M) Wiggle Sort II  (M) Top K Frequent Elements

******************************trapping-rain-water-ii
 Given an m x n matrix of positive integers representing the height of each unit
cell in a 2D elevation map, compute the volume of water it is able to trap after
raining.  Note: Both m and n are less than 110. The height of each unit cell is
greater than 0 and is less than 20,000.  Example:  Given the following 3x6
height map:
[
[1,4,3,1,3,2],
[3,2,1,3,2,4],
[2,3,3,2,3,1]
]
Return 4.    The above image represents the elevation map
[[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]] before the rain.   After the rain,
water are trapped between the blocks. The total volume of water trapped is 4.
Subscribe to see which companies asked this question    Show Tags   Breadth-
first Search  Heap     Show Similar Problems   (H) Trapping Rain Water

******************************top-k-frequent-elements
 Given a non-empty array of integers, return the k most frequent elements.  For
example, Given [1,1,1,2,2,3] and k = 2, return [1,2] .  Note:   You may assume k
is always valid, 1 ≤ k ≤ number of unique elements.  Your algorithm's time
complexity must be better than O( n log n ), where n is the array's size.
Subscribe to see which companies asked this question    Show Tags   Hash Table
Heap     Show Similar Problems   (M) Word Frequency  (M) Kth Largest Element in
an Array

******************************design-twitter
 Design a simplified version of Twitter where users can post tweets,
follow/unfollow another user and is able to see the 10 most recent tweets in the
user's news feed. Your design should support the following methods:
postTweet(userId, tweetId) : Compose a new tweet.  getNewsFeed(userId) :
Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the
news feed must be posted by users who the user followed or by the user herself.
Tweets must be ordered from most recent to least recent.  follow(followerId,
followeeId) : Follower follows a followee.  unfollow(followerId, followeeId) :
Follower unfollows a followee.    Example:  Twitter twitter = new Twitter();
// User 1 posts a new tweet (id = 5).
twitter.postTweet(1, 5);
// User 1's news feed should return a list with 1 tweet id -> [5].
twitter.getNewsFeed(1);
// User 1 follows user 2.
twitter.follow(1, 2);
// User 2 posts a new tweet (id = 6).
twitter.postTweet(2, 6);
// User 1's news feed should return a list with 2 tweet ids -> [6, 5].
// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.
twitter.getNewsFeed(1);
// User 1 unfollows user 2.
twitter.unfollow(1, 2);
// User 1's news feed should return a list with 1 tweet id -> [5],
// since user 1 is no longer following user 2.
twitter.getNewsFeed(1);    Subscribe to see which companies asked this question
Show Tags   Hash Table  Heap  Design

