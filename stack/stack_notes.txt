******************************implement-queue-using-stacks
 Implement the following operations of a queue using stacks.  push(x) -- Push
element x to the back of queue.  pop() -- Removes the element from in front of
queue.  peek() -- Get the front element.  empty() -- Return whether the queue is
empty.   Notes:   You must use only standard operations of a stack -- which
means only push to top , peek/pop from top , size , and is empty operations are
valid.  Depending on your language, stack may not be supported natively. You may
simulate a stack by using a list or deque (double-ended queue), as long as you
use only standard operations of a stack.  You may assume that all operations are
valid (for example, no pop or peek operations will be called on an empty queue).
Subscribe to see which companies asked this question    Show Tags   Stack
Design     Show Similar Problems   (E) Implement Stack using Queues

******************************implement-stack-using-queues
 Implement the following operations of a stack using queues.  push(x) -- Push
element x onto stack.  pop() -- Removes the element on top of the stack.  top()
-- Get the top element.  empty() -- Return whether the stack is empty.   Notes:
You must use only standard operations of a queue -- which means only push to
back , peek/pop from front , size , and is empty operations are valid.
Depending on your language, queue may not be supported natively. You may
simulate a queue by using a list or deque (double-ended queue), as long as you
use only standard operations of a queue.  You may assume that all operations are
valid (for example, no pop or top operations will be called on an empty stack).
Update (2015-06-11): The class name of the Java function had been updated to
MyStack instead of Stack.  Credits: Special thanks to @jianchao.li.fighter for
adding this problem and all test cases.   Subscribe to see which companies asked
this question    Show Tags   Stack  Design     Show Similar Problems   (E)
Implement Queue using Stacks

******************************binary-tree-preorder-traversal
 Given a binary tree, return the preorder traversal of its nodes' values.  For
example: Given binary tree {1,#,2,3} ,  1
\
2
/
3   return [1,2,3] .  Note: Recursive solution is trivial, could you do it
iteratively?   Subscribe to see which companies asked this question    Show Tags
Tree  Stack     Show Similar Problems   (M) Binary Tree Inorder Traversal  (M)
Verify Preorder Sequence in Binary Search Tree

******************************verify-preorder-serialization-of-a-binary-tree
 One way to serialize a binary tree is to use pre-order traversal. When we
encounter a non-null node, we record the node's value. If it is a null node, we
record using a sentinel value such as # .  _9_
/   \
3     2
/ \   / \
4   1  #  6
/ \ / \   / \
# # # #   # #  For example, the above binary tree can be serialized to the
string "9,3,4,#,#,1,#,#,2,#,6,#,#" , where # represents a null node.  Given a
string of comma separated values, verify whether it is a correct preorder
traversal serialization of a binary tree. Find an algorithm without
reconstructing the tree.  Each comma separated value in the string must be
either an integer or a character '#' representing null pointer.  You may assume
that the input format is always valid, for example it could never contain two
consecutive commas such as "1,,3" .  Example 1:  "9,3,4,#,#,1,#,#,2,#,6,#,#"
Return true  Example 2:  "1,#" Return false  Example 3:  "9,#,#,1" Return false
Credits: Special thanks to @dietpepsi for adding this problem and creating all
test cases.   Subscribe to see which companies asked this question    Show Tags
Stack

******************************valid-parentheses
 Given a string containing just the characters '(' , ')' , '{' , '}' , '[' and
']' , determine if the input string is valid.  The brackets must close in the
correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.
Subscribe to see which companies asked this question    Show Tags   Stack
String     Show Similar Problems   (M) Generate Parentheses  (H) Longest Valid
Parentheses  (H) Remove Invalid Parentheses

******************************evaluate-reverse-polish-notation
 Evaluate the value of an arithmetic expression in Reverse Polish Notation .
Valid operators are + , - , * , / . Each operand may be an integer or another
expression.  Some examples:  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6    Subscribe to see which
companies asked this question    Show Tags   Stack     Show Similar Problems
(H) Basic Calculator  (H) Expression Add Operators

******************************flatten-nested-list-iterator
 Given a nested list of integers, implement an iterator to flatten it.  Each
element is either an integer, or a list -- whose elements may also be integers
or other lists.  Example 1: Given the list [[1,1],2,[1,1]] , By calling next
repeatedly until hasNext returns false, the order of elements returned by next
should be: [1,1,2,1,1] .   Example 2: Given the list [1,[4,[6]]] , By calling
next repeatedly until hasNext returns false, the order of elements returned by
next should be: [1,4,6] .    Subscribe to see which companies asked this
question    Show Tags   Stack  Design     Show Similar Problems   (M) Flatten 2D
Vector  (M) Zigzag Iterator  (M) Mini Parser

******************************decode-string
 Given an encoded string, return it's decoded string.  The encoding rule is:
k[encoded_string] , where the encoded_string inside the square brackets is being
repeated exactly k times. Note that k is guaranteed to be a positive integer.
You may assume that the input string is always valid; No extra white spaces,
square brackets are well-formed, etc.  Furthermore, you may assume that the
original data does not contain any digits and that digits are only for those
repeat numbers, k . For example, there won't be input like 3a or 2[4] .
Examples:  s = "3[a]2[bc]", return "aaabcbc".
s = "3[a2[c]]", return "accaccacc".
s = "2[abc]3[cd]ef", return "abcabccdcdcdef".    Subscribe to see which
companies asked this question    Show Tags   Depth-first Search  Stack

******************************binary-tree-inorder-traversal
 Given a binary tree, return the inorder traversal of its nodes' values.  For
example: Given binary tree [1,null,2,3] ,  1
\
2
/
3   return [1,3,2] .  Note: Recursive solution is trivial, could you do it
iteratively?   Subscribe to see which companies asked this question    Show Tags
Tree  Hash Table  Stack     Show Similar Problems   (M) Validate Binary Search
Tree  (M) Binary Tree Preorder Traversal  (H) Binary Tree Postorder Traversal
(M) Binary Search Tree Iterator  (M) Kth Smallest Element in a BST  (H) Closest
Binary Search Tree Value II  (M) Inorder Successor in BST

******************************binary-search-tree-iterator
 Implement an iterator over a binary search tree (BST). Your iterator will be
initialized with the root node of a BST.  Calling next() will return the next
smallest number in the BST.  Note: next() and hasNext() should run in average
O(1) time and uses O( h ) memory, where h is the height of the tree.  Credits:
Special thanks to @ts for adding this problem and creating all test cases.
Subscribe to see which companies asked this question    Show Tags   Tree  Stack
Design     Show Similar Problems   (M) Binary Tree Inorder Traversal  (M)
Flatten 2D Vector  (M) Zigzag Iterator  (M) Peeking Iterator  (M) Inorder
Successor in BST

******************************trapping-rain-water
 Given n non-negative integers representing an elevation map where the width of
each bar is 1, compute how much water it is able to trap after raining.  For
example, Given [0,1,0,2,1,0,1,3,2,1,2,1] , return 6 .    The above elevation map
is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain
water (blue section) are being trapped. Thanks Marcos for contributing this
image!   Subscribe to see which companies asked this question    Show Tags
Array  Stack  Two Pointers     Show Similar Problems   (M) Container With Most
Water  (M) Product of Array Except Self  (H) Trapping Rain Water II

******************************largest-rectangle-in-histogram
 Given n non-negative integers representing the histogram's bar height where the
width of each bar is 1, find the area of largest rectangle in the histogram.
Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3]
.     The largest rectangle is shown in the shaded area, which has area = 10
unit.   For example, Given heights = [2,1,5,6,2,3] , return 10 .   Subscribe to
see which companies asked this question    Show Tags   Array  Stack     Show
Similar Problems   (H) Maximal Rectangle

******************************remove-k-digits
 Given a non-negative integer num represented as a string, remove k digits from
the number so that the new number is the smallest possible.  Note:   The length
of num is less than 10002 and will be &ge; k .  The given num does not contain
any leading zero.     Example 1:  Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219
which is the smallest.   Example 2:  Input: num = "10200", k = 1
Output: "200"
Explanation: Remove the leading 1 and the number is 200. Note that the output
must not contain leading zeroes.   Example 3:  Input: num = "10", k = 2
Output: "0"
Explanation: Remove all the digits from the number and it is left with nothing
which is 0.    Subscribe to see which companies asked this question    Show Tags
Stack  Greedy     Show Similar Problems   (H) Create Maximum Number

******************************simplify-path
 Given an absolute path for a file (Unix-style), simplify it.  For example,
path = "/home/" , => "/home"  path = "/a/./b/../../c/" , => "/c"   click to show
corner cases.  Corner Cases:    Did you consider the case where path = "/../" ?
In this case, you should return "/" .  Another corner case is the path might
contain multiple slashes '/' together, such as "/home//foo/" . In this case, you
should ignore redundant slashes and return "/home/foo" .     Subscribe to see
which companies asked this question    Show Tags   Stack  String

******************************remove-duplicate-letters
 Given a string which contains only lowercase letters, remove duplicate letters
so that every letter appear once and only once. You must make sure your result
is the smallest in lexicographical order among all possible results.   Example:
Given "bcabc" Return "abc"   Given "cbacdcbc" Return "acdb"   Credits: Special
thanks to @dietpepsi for adding this problem and creating all test cases.
Subscribe to see which companies asked this question    Show Tags   Stack
Greedy

******************************basic-calculator
 Implement a basic calculator to evaluate a simple expression string.  The
expression string may contain open ( and closing parentheses ) , the plus + or
minus sign - , non-negative integers and empty spaces  .  You may assume that
the given expression is always valid.  Some examples:  "1 + 1" = 2
" 2-1 + 2 " = 3
"(1+(4+5+2)-3)+(6+8)" = 23    Note:  Do not use the eval built-in library
function.   Subscribe to see which companies asked this question    Show Tags
Stack  Math     Show Similar Problems   (M) Evaluate Reverse Polish Notation
(M) Basic Calculator II  (M) Different Ways to Add Parentheses  (H) Expression
Add Operators

******************************min-stack
 Design a stack that supports push, pop, top, and retrieving the minimum element
in constant time.  push(x) -- Push element x onto stack.  pop() -- Removes the
element on top of the stack.  top() -- Get the top element.  getMin() --
Retrieve the minimum element in the stack.    Example:  MinStack minStack = new
MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin();   --> Returns -3.
minStack.pop();
minStack.top();      --> Returns 0.
minStack.getMin();   --> Returns -2.    Subscribe to see which companies asked
this question    Show Tags   Stack  Design     Show Similar Problems   (H)
Sliding Window Maximum

******************************binary-tree-postorder-traversal
 Given a binary tree, return the postorder traversal of its nodes' values.  For
example: Given binary tree {1,#,2,3} ,  1
\
2
/
3   return [3,2,1] .  Note: Recursive solution is trivial, could you do it
iteratively?   Subscribe to see which companies asked this question    Show Tags
Tree  Stack     Show Similar Problems   (M) Binary Tree Inorder Traversal

******************************mini-parser
 Given a nested list of integers represented as a string, implement a parser to
deserialize it.  Each element is either an integer, or a list -- whose elements
may also be integers or other lists.  Note: You may assume that the string is
well-formed:  String is non-empty.  String does not contain white spaces.
String contains only digits 0-9 , [ , -  , , ] .    Example 1:  Given s = "324",
You should return a NestedInteger object which contains a single integer 324.
Example 2:  Given s = "[123,[456,[789]]]",
Return a NestedInteger object containing a nested list with 2 elements:
1. An integer containing value 123.
2. A nested list containing two elements:
i.  An integer containing value 456.
ii. A nested list with one element:
a. An integer containing value 789.    Subscribe to see which companies asked
this question    Show Tags   Stack  String     Show Similar Problems   (M)
Flatten Nested List Iterator

******************************maximal-rectangle
 Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle
containing only 1's and return its area.  For example, given the following
matrix: 1 0 1 0 0
1 0 1  1  1 1 1 1  1  1 1 0 0 1 0 Return 6.   Subscribe to see which companies
asked this question    Show Tags   Array  Hash Table  Stack  Dynamic Programming
Show Similar Problems   (H) Largest Rectangle in Histogram  (M) Maximal Square

******************************binary-tree-zigzag-level-order-traversal
 Given a binary tree, return the zigzag level order traversal of its nodes'
values. (ie, from left to right, then right to left for the next level and
alternate between).  For example: Given binary tree [3,9,20,null,null,15,7] ,  3
/ \
9  20
/  \
15   7   return its zigzag level order traversal as:  [
[3],
[20,9],
[15,7]
]    Subscribe to see which companies asked this question    Show Tags   Tree
Breadth-first Search  Stack     Show Similar Problems   (E) Binary Tree Level
Order Traversal

