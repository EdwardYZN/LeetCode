******************************regular-expression-matching
 Implement regular expression matching with support for '.' and '*' .  '.'
Matches any single character.
'*' Matches zero or more of the preceding element.
The matching should cover the entire input string (not partial).
The function prototype should be:
bool isMatch(const char *s, const char *p)
Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "a*") → true
isMatch("aa", ".*") → true
isMatch("ab", ".*") → true
isMatch("aab", "c*a*b") → true   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  Backtracking  String     Show
Similar Problems   (H) Wildcard Matching

******************************reverse-vowels-of-a-string
 Write a function that takes a string as input and reverse only the vowels of a
string.   Example 1: Given s = "hello", return "holle".   Example 2: Given s =
"leetcode", return "leotcede".   Note: The vowels does not include the letter
"y".   Subscribe to see which companies asked this question    Show Tags   Two
Pointers  String     Show Similar Problems   (E) Reverse String

******************************valid-parentheses
 Given a string containing just the characters '(' , ')' , '{' , '}' , '[' and
']' , determine if the input string is valid.  The brackets must close in the
correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.
Subscribe to see which companies asked this question    Show Tags   Stack
String     Show Similar Problems   (M) Generate Parentheses  (H) Longest Valid
Parentheses  (H) Remove Invalid Parentheses

******************************basic-calculator-ii
 Implement a basic calculator to evaluate a simple expression string.  The
expression string contains only non-negative integers, + , - , * , / operators
and empty spaces  . The integer division should truncate toward zero.  You may
assume that the given expression is always valid.  Some examples:  "3+2*2" = 7
" 3/2 " = 1
" 3+5 / 2 " = 5    Note:  Do not use the eval built-in library function.
Credits: Special thanks to @ts for adding this problem and creating all test
cases.   Subscribe to see which companies asked this question    Show Tags
String     Show Similar Problems   (H) Basic Calculator  (H) Expression Add
Operators

******************************valid-palindrome
 Given a string, determine if it is a palindrome, considering only alphanumeric
characters and ignoring cases.  For example,  "A man, a plan, a canal: Panama"
is a palindrome.  "race a car" is not a palindrome.   Note: Have you consider
that the string might be empty? This is a good question to ask during an
interview.  For the purpose of this problem, we define empty string as valid
palindrome.   Subscribe to see which companies asked this question    Show Tags
Two Pointers  String     Show Similar Problems   (E) Palindrome Linked List

******************************wildcard-matching
 Implement wildcard pattern matching with support for '?' and '*' .  '?' Matches
any single character.
'*' Matches any sequence of characters (including the empty sequence).
The matching should cover the entire input string (not partial).
The function prototype should be:
bool isMatch(const char *s, const char *p)
Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "*") → true
isMatch("aa", "a*") → true
isMatch("ab", "?*") → true
isMatch("aab", "c*a*b") → false   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  Backtracking  Greedy  String
Show Similar Problems   (H) Regular Expression Matching

******************************string-to-integer-atoi
 Implement atoi to convert a string to an integer.  Hint: Carefully consider all
possible input cases. If you want a challenge, please do not see below and ask
yourself what are the possible input cases.   Notes: It is intended for this
problem to be specified vaguely (ie, no given input specs). You are responsible
to gather all the input requirements up front.   Update (2015-02-10): The
signature of the C++ function had been updated. If you still see your function
signature accepts a const char * argument, please click the reload button to
reset your code definition.  spoilers alert... click to show requirements for
atoi.  Requirements for atoi:  The function first discards as many whitespace
characters as necessary until the first non-whitespace character is found. Then,
starting from this character, takes an optional initial plus or minus sign
followed by as many numerical digits as possible, and interprets them as a
numerical value.  The string can contain additional characters after those that
form the integral number, which are ignored and have no effect on the behavior
of this function.  If the first sequence of non-whitespace characters in str is
not a valid integral number, or if no such sequence exists because either str is
empty or it contains only whitespace characters, no conversion is performed.  If
no valid conversion could be performed, a zero value is returned. If the correct
value is out of the range of representable values, INT_MAX (2147483647) or
INT_MIN (-2147483648) is returned.    Subscribe to see which companies asked
this question    Show Tags   Math  String     Show Similar Problems   (E)
Reverse Integer  (H) Valid Number

******************************add-binary
 Given two binary strings, return their sum (also a binary string).  For
example, a = "11" b = "1" Return "100" .   Subscribe to see which companies
asked this question    Show Tags   Math  String     Show Similar Problems   (M)
Add Two Numbers  (M) Multiply Strings  (E) Plus One

******************************zigzag-conversion
 The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of
rows like this: (you may want to display this pattern in a fixed font for better
legibility) P   A   H   N
A P L S I I G
Y   I   R And then read line by line: "PAHNAPLSIIGYIR"  Write the code that will
take a string and make this conversion given a number of rows: string
convert(string text, int nRows);  convert("PAYPALISHIRING", 3) should return
"PAHNAPLSIIGYIR" .   Subscribe to see which companies asked this question
Show Tags   String

******************************text-justification
 Given an array of words and a length L , format the text such that each line
has exactly L characters and is fully (left and right) justified.  You should
pack your words in a greedy approach; that is, pack as many words as you can in
each line. Pad extra spaces ' ' when necessary so that each line has exactly L
characters.  Extra spaces between words should be distributed as evenly as
possible. If the number of spaces on a line do not divide evenly between words,
the empty slots on the left will be assigned more spaces than the slots on the
right.  For the last line of text, it should be left justified and no extra
space is inserted between words.  For example,  words : ["This", "is", "an",
"example", "of", "text", "justification."]  L : 16 .  Return the formatted lines
as:  [
"This    is    an",
"example  of text",
"justification.  "
]    Note: Each word is guaranteed not to exceed L in length.  click to show
corner cases.  Corner Cases:    A line other than the last line might contain
only one word. What should you do in this case? In this case, that line should
be left-justified.     Subscribe to see which companies asked this question
Show Tags   String

******************************integer-to-roman
 Given an integer, convert it to a roman numeral.  Input is guaranteed to be
within the range from 1 to 3999.   Subscribe to see which companies asked this
question    Show Tags   Math  String     Show Similar Problems   (E) Roman to
Integer  (H) Integer to English Words

******************************count-and-say
 The count-and-say sequence is the sequence of integers beginning as follows:
1, 11, 21, 1211, 111221, ...    1 is read off as "one 1" or 11 .  11 is read off
as "two 1s" or 21 .  21 is read off as "one 2 , then one 1" or 1211 .   Given an
integer n , generate the n th sequence.  Note: The sequence of integers will be
represented as a string.    Subscribe to see which companies asked this question
Show Tags   String     Show Similar Problems   (M) Encode and Decode Strings

******************************palindrome-pairs
 Given a list of unique words. Find all pairs of distinct indices (i, j) in the
given list, so that the concatenation of the two words, i.e. words[i] + words[j]
is a palindrome.   Example 1: Given words = ["bat", "tab", "cat"] Return [[0,
1], [1, 0]] The palindromes are ["battab", "tabbat"]    Example 2: Given words =
["abcd", "dcba", "lls", "s", "sssll"] Return [[0, 1], [1, 0], [3, 2], [2, 4]]
The palindromes are ["dcbaabcd", "abcddcba", "slls", "llssssll"]   Credits:
Special thanks to @dietpepsi for adding this problem and creating all test
cases.   Subscribe to see which companies asked this question    Show Tags
Hash Table  String  Trie     Show Similar Problems   (M) Longest Palindromic
Substring  (H) Shortest Palindrome

******************************scramble-string
 Given a string s1 , we may represent it as a binary tree by partitioning it to
two non-empty substrings recursively.  Below is one possible representation of
s1 = "great" :  great
/    \
gr    eat
/ \    /  \
g   r  e   at
/ \
a   t  To scramble the string, we may choose any non-leaf node and swap its two
children.  For example, if we choose the node "gr" and swap its two children, it
produces a scrambled string "rgeat" .  rgeat
/    \
rg    eat
/ \    /  \
r   g  e   at
/ \
a   t  We say that "rgeat" is a scrambled string of "great" .  Similarly, if we
continue to swap the children of nodes "eat" and "at" , it produces a scrambled
string "rgtae" .  rgtae
/    \
rg    tae
/ \    /  \
r   g  ta  e
/ \
t   a  We say that "rgtae" is a scrambled string of "great" .  Given two strings
s1 and s2 of the same length, determine if s2 is a scrambled string of s1 .
Subscribe to see which companies asked this question    Show Tags   Dynamic
Programming  String

******************************anagrams
 Given an array of strings, group anagrams together.  For example, given:
["eat", "tea", "tan", "ate", "nat", "bat"] , Return: [
["ate", "eat","tea"],
["nat","tan"],
["bat"]
]  Note: All inputs will be in lower-case.   Subscribe to see which companies
asked this question    Show Tags   Hash Table  String     Show Similar Problems
(E) Valid Anagram  (E) Group Shifted Strings

******************************distinct-subsequences
 Given a string S and a string T , count the number of distinct subsequences of
T in S .  A subsequence of a string is a new string which is formed from the
original string by deleting some (can be none) of the characters without
disturbing the relative positions of the remaining characters. (ie, "ACE" is a
subsequence of "ABCDE" while "AEC" is not).  Here is an example:  S = "rabbbit"
, T = "rabbit"   Return 3 .   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  String

******************************roman-to-integer
 Given a roman numeral, convert it to an integer.  Input is guaranteed to be
within the range from 1 to 3999.   Subscribe to see which companies asked this
question    Show Tags   Math  String     Show Similar Problems   (M) Integer to
Roman

******************************shortest-palindrome
 Given a string S, you are allowed to convert it to a palindrome by adding
characters in front of it. Find and return the shortest palindrome you can find
by performing this transformation.  For example:  Given "aacecaaa" , return
"aaacecaaa" .  Given "abcd" , return "dcbabcd" .  Credits: Special thanks to
@ifanchu for adding this problem and creating all test cases. Thanks to @Freezen
for additional test cases.   Subscribe to see which companies asked this
question    Show Tags   String     Show Similar Problems   (M) Longest
Palindromic Substring  (E) Implement strStr()  (H) Palindrome Pairs

******************************edit-distance
 Given two words word1 and word2 , find the minimum number of steps required to
convert word1 to word2 . (each operation is counted as 1 step.)  You have the
following 3 operations permitted on a word:  a) Insert a character b) Delete a
character c) Replace a character    Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  String     Show Similar Problems
(M) One Edit Distance

******************************restore-ip-addresses
 Given a string containing only digits, restore it by returning all possible
valid IP address combinations.  For example: Given "25525511135" ,  return
["255.255.11.135", "255.255.111.35"] . (Order does not matter)   Subscribe to
see which companies asked this question    Show Tags   Backtracking  String

******************************longest-common-prefix
 Write a function to find the longest common prefix string amongst an array of
strings.   Subscribe to see which companies asked this question    Show Tags
String

******************************letter-combinations-of-a-phone-number
 Given a digit string, return all possible letter combinations that the number
could represent.  A mapping of digit to letters (just like on the telephone
buttons) is given below.    Input: Digit string "23" Output: ["ad", "ae", "af",
"bd", "be", "bf", "cd", "ce", "cf"].   Note: Although the above answer is in
lexicographical order, your answer could be in any order you want.   Subscribe
to see which companies asked this question    Show Tags   Backtracking  String
Show Similar Problems   (M) Generate Parentheses  (M) Combination Sum  (E)
Binary Watch

******************************word-ladder-ii
 Given two words ( beginWord and endWord ), and a dictionary's word list, find
all shortest transformation sequence(s) from beginWord to endWord , such that:
Only one letter can be changed at a time  Each intermediate word must exist in
the word list   For example,  Given:  beginWord = "hit"  endWord = "cog"
wordList = ["hot","dot","dog","lot","log"]   Return  [
["hit","hot","dot","dog","cog"],
["hit","hot","lot","log","cog"]
]    Note:   All words have the same length.  All words contain only lowercase
alphabetic characters.     Subscribe to see which companies asked this question
Show Tags   Array  Backtracking  Breadth-first Search  String

******************************longest-valid-parentheses
 Given a string containing just the characters '(' and ')' , find the length of
the longest valid (well-formed) parentheses substring.  For "(()" , the longest
valid parentheses substring is "()" , which has length = 2.  Another example is
")()())" , where the longest valid parentheses substring is "()()" , which has
length = 4.   Subscribe to see which companies asked this question    Show Tags
Dynamic Programming  String     Show Similar Problems   (E) Valid Parentheses

******************************reverse-words-in-a-string
 Given an input string, reverse the string word by word.  For example, Given s =
" the sky is blue ", return " blue is sky the ".   Update (2015-02-12): For C
programmers: Try to solve it in-place in O (1) space.  click to show
clarification.  Clarification:    What constitutes a word? A sequence of non-
space characters constitutes a word.  Could the input string contain leading or
trailing spaces? Yes. However, your reversed string should not contain leading
or trailing spaces.  How about multiple spaces between two words? Reduce them to
a single space in the reversed string.      Subscribe to see which companies
asked this question    Show Tags   String     Show Similar Problems   (M)
Reverse Words in a String II

******************************longest-palindromic-substring
 Given a string S , find the longest palindromic substring in S . You may assume
that the maximum length of S is 1000, and there exists one unique longest
palindromic substring.   Subscribe to see which companies asked this question
Show Tags   String     Show Similar Problems   (H) Shortest Palindrome  (E)
Palindrome Permutation  (H) Palindrome Pairs

******************************valid-number
 Validate if a given string is numeric.  Some examples:  "0" => true  "   0.1  "
=> true  "abc" => false  "1 a" => false  "2e10" => true   Note: It is intended
for the problem statement to be ambiguous. You should gather all requirements up
front before implementing one.   Update (2015-02-10): The signature of the C++
function had been updated. If you still see your function signature accepts a
const char * argument, please click the reload button to reset your code
definition.   Subscribe to see which companies asked this question    Show Tags
Math  String     Show Similar Problems   (E) String to Integer (atoi)

******************************substring-with-concatenation-of-all-words
 You are given a string, s , and a list of words, words , that are all of the
same length. Find all starting indices of substring(s) in s that is a
concatenation of each word in words exactly once and without any intervening
characters.  For example, given:  s : "barfoothefoobarman"  words : ["foo",
"bar"]   You should return the indices: [0,9] . (order does not matter).
Subscribe to see which companies asked this question    Show Tags   Hash Table
Two Pointers  String     Show Similar Problems   (H) Minimum Window Substring

******************************integer-to-english-words
 Convert a non-negative integer to its english words representation. Given input
is guaranteed to be less than 2 31 - 1.  For example,  123 -> "One Hundred
Twenty Three"
12345 -> "Twelve Thousand Three Hundred Forty Five"
1234567 -> "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty
Seven"   Did you see a pattern in dividing the number into chunk of words? For
example, 123 and 123000.  Group the number by thousands (3 digits). You can
write a helper function that takes a number less than 1000 and convert just that
chunk to words.  There are many edge cases. What are some good test cases? Does
your code work with input such as 0? Or 1000010? (middle chunk is zero and
should not be printed out)    Subscribe to see which companies asked this
question    Show Tags   Math  String     Show Similar Problems   (M) Integer to
Roman

******************************multiply-strings
 Given two numbers represented as strings, return multiplication of the numbers
as a string.  Note:   The numbers can be arbitrarily large and are non-negative.
Converting the input string to integer is NOT allowed.  You should NOT use
internal library such as BigInteger .    Subscribe to see which companies asked
this question    Show Tags   Math  String     Show Similar Problems   (M) Add
Two Numbers  (E) Plus One  (E) Add Binary

******************************interleaving-string
 Given s1 , s2 , s3 , find whether s3 is formed by the interleaving of s1 and s2
.  For example, Given:  s1 = "aabcc" ,  s2 = "dbbca" ,  When s3 = "aadbbcbcac" ,
return true. When s3 = "aadbbbaccc" , return false.   Subscribe to see which
companies asked this question    Show Tags   Dynamic Programming  String

******************************decode-ways
 A message containing letters from A-Z is being encoded to numbers using the
following mapping:  'A' -> 1
'B' -> 2
...
'Z' -> 26  Given an encoded message containing digits, determine the total
number of ways to decode it.  For example, Given encoded message "12" ,
it could be decoded as "AB" (1 2) or "L" (12).  The number of ways decoding "12"
is 2.   Subscribe to see which companies asked this question    Show Tags
Dynamic Programming  String

******************************simplify-path
 Given an absolute path for a file (Unix-style), simplify it.  For example,
path = "/home/" , => "/home"  path = "/a/./b/../../c/" , => "/c"   click to show
corner cases.  Corner Cases:    Did you consider the case where path = "/../" ?
In this case, you should return "/" .  Another corner case is the path might
contain multiple slashes '/' together, such as "/home//foo/" . In this case, you
should ignore redundant slashes and return "/home/foo" .     Subscribe to see
which companies asked this question    Show Tags   Stack  String

******************************generate-parentheses
 Given n pairs of parentheses, write a function to generate all combinations of
well-formed parentheses.  For example, given n = 3, a solution set is:  [
"((()))",
"(()())",
"(())()",
"()(())",
"()()()"
]   Subscribe to see which companies asked this question    Show Tags
Backtracking  String     Show Similar Problems   (M) Letter Combinations of a
Phone Number  (E) Valid Parentheses

******************************ransom-note
 Given  an  arbitrary  ransom  note  string  and  another  string  containing
letters from  all  the  magazines,  write  a  function  that  will  return  true
if  the  ransom
note  can  be  constructed  from  the  magazines ;  otherwise,  it  will  return
false.  Each  letter  in  the  magazine  string  can  only  be  used  once  in
your  ransom  note.  Note: You may assume that both strings contain only
lowercase letters.  canConstruct("a", "b") -> false
canConstruct("aa", "ab") -> false
canConstruct("aa", "aab") -> true   Subscribe to see which companies asked this
question    Show Tags   String

******************************longest-substring-without-repeating-characters
 Given a string, find the length of the longest substring without repeating
characters.  Examples:  Given "abcabcbb" , the answer is "abc" , which the
length is 3.  Given "bbbbb" , the answer is "b" , with the length of 1.  Given
"pwwkew" , the answer is "wke" , with the length of 3. Note that the answer must
be a substring , "pwke" is a subsequence and not a substring.   Subscribe to see
which companies asked this question    Show Tags   Hash Table  Two Pointers
String     Show Similar Problems   (H) Longest Substring with At Most Two
Distinct Characters

******************************length-of-last-word
 Given a string s consists of upper/lower-case alphabets and empty space
characters ' ' , return the length of last word in the string.  If the last word
does not exist, return 0.  Note: A word is defined as a character sequence
consists of non-space characters only.  For example, Given s = "Hello World" ,
return 5 .   Subscribe to see which companies asked this question    Show Tags
String

******************************mini-parser
 Given a nested list of integers represented as a string, implement a parser to
deserialize it.  Each element is either an integer, or a list -- whose elements
may also be integers or other lists.  Note: You may assume that the string is
well-formed:  String is non-empty.  String does not contain white spaces.
String contains only digits 0-9 , [ , -  , , ] .    Example 1:  Given s = "324",
You should return a NestedInteger object which contains a single integer 324.
Example 2:  Given s = "[123,[456,[789]]]",
Return a NestedInteger object containing a nested list with 2 elements:
1. An integer containing value 123.
2. A nested list containing two elements:
i.  An integer containing value 456.
ii. A nested list with one element:
a. An integer containing value 789.    Subscribe to see which companies asked
this question    Show Tags   Stack  String     Show Similar Problems   (M)
Flatten Nested List Iterator

******************************compare-version-numbers
 Compare two version numbers version1 and version2 . If version1 &gt; version2
return 1, if version1 &lt; version2 return -1, otherwise return 0.  You may
assume that the version strings are non-empty and contain only digits and the .
character. The . character does not represent a decimal point and is used to
separate number sequences. For instance, 2.5 is not "two and a half" or "half
way to version three", it is the fifth second-level revision of the second
first-level revision.  Here is an example of version numbers ordering:  0.1 &lt;
1.1 &lt; 1.2 &lt; 13.37  Credits: Special thanks to @ts for adding this problem
and creating all test cases.   Subscribe to see which companies asked this
question    Show Tags   String

******************************implement-strstr
 Implement strStr().  Returns the index of the first occurrence of needle in
haystack, or -1 if needle is not part of haystack.   Subscribe to see which
companies asked this question    Show Tags   Two Pointers  String     Show
Similar Problems   (H) Shortest Palindrome

******************************reverse-string
 Write a function that takes a string as input and returns the string reversed.
Example: Given s = "hello", return "olleh".   Subscribe to see which companies
asked this question    Show Tags   Two Pointers  String     Show Similar
Problems   (E) Reverse Vowels of a String

******************************minimum-window-substring
 Given a string S and a string T, find the minimum window in S which will
contain all the characters in T in complexity O(n).  For example,  S =
"ADOBECODEBANC"  T = "ABC"   Minimum window is "BANC" .   Note: If there is no
such window in S that covers all characters in T, return the empty string "" .
If there are multiple such windows, you are guaranteed that there will always be
only one unique minimum window in S.   Subscribe to see which companies asked
this question    Show Tags   Hash Table  Two Pointers  String     Show Similar
Problems   (H) Substring with Concatenation of All Words  (M) Minimum Size
Subarray Sum  (H) Sliding Window Maximum

