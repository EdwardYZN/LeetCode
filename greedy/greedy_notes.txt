******************************remove-k-digits
 Given a non-negative integer num represented as a string, remove k digits from
the number so that the new number is the smallest possible.  Note:   The length
of num is less than 10002 and will be &ge; k .  The given num does not contain
any leading zero.     Example 1:  Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219
which is the smallest.   Example 2:  Input: num = "10200", k = 1
Output: "200"
Explanation: Remove the leading 1 and the number is 200. Note that the output
must not contain leading zeroes.   Example 3:  Input: num = "10", k = 2
Output: "0"
Explanation: Remove all the digits from the number and it is left with nothing
which is 0.    Subscribe to see which companies asked this question    Show Tags
Stack  Greedy     Show Similar Problems   (H) Create Maximum Number

******************************gas-station
 There are N gas stations along a circular route, where the amount of gas at
station i is gas[i] .  You have a car with an unlimited gas tank and it costs
cost[i] of gas to travel from station i to its next station ( i +1). You begin
the journey with an empty tank at one of the gas stations.  Return the starting
gas station's index if you can travel around the circuit once, otherwise return
-1.   Note: The solution is guaranteed to be unique.   Subscribe to see which
companies asked this question    Show Tags   Greedy

******************************best-time-to-buy-and-sell-stock-ii
 Say you have an array for which the i th element is the price of a given stock
on day i .  Design an algorithm to find the maximum profit. You may complete as
many transactions as you like (ie, buy one and sell one share of the stock
multiple times). However, you may not engage in multiple transactions at the
same time (ie, you must sell the stock before you buy again).   Subscribe to see
which companies asked this question    Show Tags   Array  Greedy     Show
Similar Problems   (E) Best Time to Buy and Sell Stock  (H) Best Time to Buy and
Sell Stock III  (H) Best Time to Buy and Sell Stock IV  (M) Best Time to Buy and
Sell Stock with Cooldown

******************************jump-game-ii
 Given an array of non-negative integers, you are initially positioned at the
first index of the array.  Each element in the array represents your maximum
jump length at that position.  Your goal is to reach the last index in the
minimum number of jumps.  For example: Given array A = [2,3,1,1,4]   The minimum
number of jumps to reach the last index is 2 . (Jump 1 step from index 0 to 1,
then 3 steps to the last index.)   Note: You can assume that you can always
reach the last index.   Subscribe to see which companies asked this question
Show Tags   Array  Greedy

******************************is-subsequence
 Given a string s and a string t , check if s is subsequence of t .  You may
assume that there is only lower case English letters in both s and t . t is
potentially a very long (length ~= 500,000) string, and s is a short string
(<=100).  A subsequence of a string is a new string which is formed from the
original string by deleting some (can be none) of the characters without
disturbing the relative positions of the remaining characters. (ie, "ace" is a
subsequence of "abcde" while "aec" is not).  Example 1:  s = "abc" , t =
"ahbgdc"   Return true .  Example 2:  s = "axc" , t = "ahbgdc"   Return false .
Follow up: If there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B,
and you want to check one by one to see if T has its subsequence. In this
scenario, how would you change your code?  Credits: Special thanks to @pbrother
for adding this problem and creating all test cases.   Subscribe to see which
companies asked this question    Show Tags   Binary Search  Dynamic Programming
Greedy

******************************queue-reconstruction-by-height
 Suppose you have a random list of people standing in a queue. Each person is
described by a pair of integers (h, k) , where h is the height of the person and
k is the number of people in front of this person who have a height greater than
or equal to h . Write an algorithm to reconstruct the queue.  Note: The number
of people is less than 1,100.  Example  Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]
Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]    Subscribe to see which companies
asked this question    Show Tags   Greedy     Show Similar Problems   (H) Count
of Smaller Numbers After Self

******************************jump-game
 Given an array of non-negative integers, you are initially positioned at the
first index of the array.  Each element in the array represents your maximum
jump length at that position.  Determine if you are able to reach the last
index.  For example: A = [2,3,1,1,4] , return true .  A = [3,2,1,0,4] , return
false .   Subscribe to see which companies asked this question    Show Tags
Array  Greedy

******************************candy
 There are N children standing in a line. Each child is assigned a rating value.
You are giving candies to these children subjected to the following
requirements:   Each child must have at least one candy.  Children with a higher
rating get more candies than their neighbors.   What is the minimum candies you
must give?   Subscribe to see which companies asked this question    Show Tags
Greedy

******************************wildcard-matching
 Implement wildcard pattern matching with support for '?' and '*' .  '?' Matches
any single character.
'*' Matches any sequence of characters (including the empty sequence).
The matching should cover the entire input string (not partial).
The function prototype should be:
bool isMatch(const char *s, const char *p)
Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "*") → true
isMatch("aa", "a*") → true
isMatch("ab", "?*") → true
isMatch("aab", "c*a*b") → false   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  Backtracking  Greedy  String
Show Similar Problems   (H) Regular Expression Matching

******************************create-maximum-number
 Given two arrays of length m and n with digits 0-9 representing two numbers.
Create the maximum number of length k <= m + n from digits of the two. The
relative order of the digits
from the same array must be preserved. Return an array of the k digits. You
should try to optimize your time and space complexity.   Example 1:   nums1 =
[3, 4, 6, 5] nums2 = [9, 1, 2, 5, 8, 3] k = 5 return [9, 8, 6, 5, 3]    Example
2:   nums1 = [6, 7] nums2 = [6, 0, 4] k = 5 return [6, 7, 6, 0, 4]    Example 3:
nums1 = [3, 9] nums2 = [8, 9] k = 3 return [9, 8, 9]   Credits: Special thanks
to @dietpepsi for adding this problem and creating all test cases.   Subscribe
to see which companies asked this question    Show Tags   Dynamic Programming
Greedy     Show Similar Problems   (M) Remove K Digits

******************************remove-duplicate-letters
 Given a string which contains only lowercase letters, remove duplicate letters
so that every letter appear once and only once. You must make sure your result
is the smallest in lexicographical order among all possible results.   Example:
Given "bcabc" Return "abc"   Given "cbacdcbc" Return "acdb"   Credits: Special
thanks to @dietpepsi for adding this problem and creating all test cases.
Subscribe to see which companies asked this question    Show Tags   Stack
Greedy

******************************wiggle-subsequence
 A sequence of numbers is called a wiggle sequence if the differences between
successive numbers strictly alternate between positive and negative. The first
difference (if one exists) may be either positive or negative. A sequence with
fewer than two elements is trivially a wiggle sequence.  For example,
[1,7,4,9,2,5] is a wiggle sequence because the differences (6,-3,5,-7,3) are
alternately positive and negative. In contrast, [1,4,7,2,5] and [1,7,4,5,5] are
not wiggle sequences, the first because its first two differences are positive
and the second because its last difference is zero.  Given a sequence of
integers, return the length of the longest subsequence that is a wiggle
sequence. A subsequence is obtained by deleting some number of elements
(eventually, also zero) from the original sequence, leaving the remaining
elements in their original order.  Examples:   Input: [1,7,4,9,2,5] Output: 6
The entire sequence is a wiggle sequence. Input: [1,17,5,10,13,15,10,5,16,8]
Output: 7
There are several subsequences that achieve this length. One is
[1,17,10,13,10,16,8]. Input: [1,2,3,4,5,6,7,8,9] Output: 2   Follow up: Can you
do it in O( n ) time?  Credits: Special thanks to @agave and @StefanPochmann for
adding this problem and creating all test cases.   Subscribe to see which
companies asked this question    Show Tags   Dynamic Programming  Greedy

******************************patching-array
 Given a sorted positive integer array nums and an integer n , add/patch
elements to the array such that any number in range [1, n] inclusive can be
formed by the sum of some elements in the array. Return the minimum number of
patches required.  Example 1:  nums = [1, 3] , n = 6 Return 1 .  Combinations of
nums are [1], [3], [1,3] , which form possible sums of: 1, 3, 4 . Now if we
add/patch 2 to nums , the combinations are: [1], [2], [3], [1,3], [2,3], [1,2,3]
. Possible sums are 1, 2, 3, 4, 5, 6 , which now covers the range [1, 6] . So we
only need 1 patch.  Example 2:  nums = [1, 5, 10] , n = 20 Return 2 . The two
patches can be [2, 4] .  Example 3:  nums = [1, 2, 2] , n = 5 Return 0 .
Credits: Special thanks to @dietpepsi for adding this problem and creating all
test cases.   Subscribe to see which companies asked this question    Show Tags
Greedy

