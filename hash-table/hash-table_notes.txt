******************************4sum
 Given an array S of n integers, are there elements a , b , c , and d in S such
that a + b + c + d = target? Find all unique quadruplets in the array which
gives the sum of target.  Note: The solution set must not contain duplicate
quadruplets.  For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.
A solution set is:
[
[-1,  0, 0, 1],
[-2, -1, 1, 2],
[-2,  0, 0, 2]
]   Subscribe to see which companies asked this question    Show Tags   Array
Hash Table  Two Pointers     Show Similar Problems   (E) Two Sum  (M) 3Sum

******************************find-the-difference
 Given two strings s and t which consist of only lowercase letters.  String t is
generated by random shuffling string s and then add one more letter at a random
position.  Find the letter that was added in t .  Example:  Input:
s = "abcd"
t = "abcde"
Output:
e
Explanation:
'e' is the letter that was added.   Subscribe to see which companies asked this
question    Show Tags   Hash Table  Bit Manipulation     Show Similar Problems
(E) Single Number

******************************copy-list-with-random-pointer
 A linked list is given such that each node contains an additional random
pointer which could point to any node in the list or null.  Return a deep copy
of the list.   Subscribe to see which companies asked this question    Show Tags
Hash Table  Linked List     Show Similar Problems   (M) Clone Graph

******************************longest-substring-without-repeating-characters
 Given a string, find the length of the longest substring without repeating
characters.  Examples:  Given "abcabcbb" , the answer is "abc" , which the
length is 3.  Given "bbbbb" , the answer is "b" , with the length of 1.  Given
"pwwkew" , the answer is "wke" , with the length of 3. Note that the answer must
be a substring , "pwke" is a subsequence and not a substring.   Subscribe to see
which companies asked this question    Show Tags   Hash Table  Two Pointers
String     Show Similar Problems   (H) Longest Substring with At Most Two
Distinct Characters

******************************happy-number
 Write an algorithm to determine if a number is "happy".  A happy number is a
number defined by the following process: Starting with any positive integer,
replace the number by the sum of the squares of its digits, and repeat the
process until the number equals 1 (where it will stay), or it loops endlessly in
a cycle which does not include 1. Those numbers for which this process ends in 1
are happy numbers.  Example:&nbsp; 19 is a happy number   1 2 + 9 2 = 82  8 2 +
2 2 = 68  6 2 + 8 2 = 100  1 2 + 0 2 + 0 2 = 1   Credits: Special thanks to
@mithmatt and @ts for adding this problem and creating all test cases.
Subscribe to see which companies asked this question    Show Tags   Hash Table
Math     Show Similar Problems   (E) Add Digits  (E) Ugly Number

******************************palindrome-pairs
 Given a list of unique words. Find all pairs of distinct indices (i, j) in the
given list, so that the concatenation of the two words, i.e. words[i] + words[j]
is a palindrome.   Example 1: Given words = ["bat", "tab", "cat"] Return [[0,
1], [1, 0]] The palindromes are ["battab", "tabbat"]    Example 2: Given words =
["abcd", "dcba", "lls", "s", "sssll"] Return [[0, 1], [1, 0], [3, 2], [2, 4]]
The palindromes are ["dcbaabcd", "abcddcba", "slls", "llssssll"]   Credits:
Special thanks to @dietpepsi for adding this problem and creating all test
cases.   Subscribe to see which companies asked this question    Show Tags
Hash Table  String  Trie     Show Similar Problems   (M) Longest Palindromic
Substring  (H) Shortest Palindrome

******************************intersection-of-two-arrays-ii
 Given two arrays, write a function to compute their intersection.  Example:
Given nums1 = [1, 2, 2, 1] , nums2 = [2, 2] , return [2, 2] .  Note:   Each
element in the result should appear as many times as it shows in both arrays.
The result can be in any order.    Follow up:   What if the given array is
already sorted? How would you optimize your algorithm?  What if nums1 's size is
small compared to nums2 's size? Which algorithm is better?  What if elements of
nums2 are stored on disk, and the memory is limited such that you cannot load
all elements into the memory at once?     Subscribe to see which companies asked
this question    Show Tags   Binary Search  Hash Table  Two Pointers  Sort
Show Similar Problems   (E) Intersection of Two Arrays

******************************anagrams
 Given an array of strings, group anagrams together.  For example, given:
["eat", "tea", "tan", "ate", "nat", "bat"] , Return: [
["ate", "eat","tea"],
["nat","tan"],
["bat"]
]  Note: All inputs will be in lower-case.   Subscribe to see which companies
asked this question    Show Tags   Hash Table  String     Show Similar Problems
(E) Valid Anagram  (E) Group Shifted Strings

******************************contains-duplicate-ii
 Given an array of integers and an integer k , find out whether there are two
distinct indices i and j in the array such that nums[i] = nums[j] and the
difference between i and j is at most k .   Subscribe to see which companies
asked this question    Show Tags   Array  Hash Table     Show Similar Problems
(E) Contains Duplicate  (M) Contains Duplicate III

******************************insert-delete-getrandom-o1-duplicates-allowed
 Design a data structure that supports all following operations in average  O(1)
time.  Note: Duplicate elements are allowed.    insert(val) : Inserts an item
val to the collection.  remove(val) : Removes an item val from the collection if
present.  getRandom : Returns a random element from current collection of
elements. The probability of each element being returned is linearly related to
the number of same value the collection contains.    Example:  // Init an empty
collection.
RandomizedCollection collection = new RandomizedCollection();
// Inserts 1 to the collection. Returns true as the collection did not contain
1.
collection.insert(1);
// Inserts another 1 to the collection. Returns false as the collection
contained 1. Collection now contains [1,1].
collection.insert(1);
// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].
collection.insert(2);
// getRandom should return 1 with the probability 2/3, and returns 2 with the
probability 1/3.
collection.getRandom();
// Removes 1 from the collection, returns true. Collection now contains [1,2].
collection.remove(1);
// getRandom should return 1 and 2 both equally likely.
collection.getRandom();    Subscribe to see which companies asked this question
Show Tags   Array  Hash Table  Design     Show Similar Problems   (H) Insert
Delete GetRandom O(1)

******************************isomorphic-strings
 Given two strings s and t , determine if they are isomorphic.  Two strings are
isomorphic if the characters in s can be replaced to get t .  All occurrences of
a character must be replaced with another character while preserving the order
of characters. No two characters may map to the same character but a character
may map to itself.  For example, Given "egg" , "add" , return true.  Given "foo"
, "bar" , return false.  Given "paper" , "title" , return true.  Note: You may
assume both s and t have the same length.   Subscribe to see which companies
asked this question    Show Tags   Hash Table     Show Similar Problems   (E)
Word Pattern

******************************repeated-dna-sequences
 All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T,
for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify
repeated sequences within the DNA.  Write a function to find all the 10-letter-
long sequences (substrings) that occur more than once in a DNA molecule.  For
example,  Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",
Return:
["AAAAACCCCC", "CCCCCAAAAA"].   Subscribe to see which companies asked this
question    Show Tags   Hash Table  Bit Manipulation

******************************binary-tree-inorder-traversal
 Given a binary tree, return the inorder traversal of its nodes' values.  For
example: Given binary tree [1,null,2,3] ,  1
\
2
/
3   return [1,3,2] .  Note: Recursive solution is trivial, could you do it
iteratively?   Subscribe to see which companies asked this question    Show Tags
Tree  Hash Table  Stack     Show Similar Problems   (M) Validate Binary Search
Tree  (M) Binary Tree Preorder Traversal  (H) Binary Tree Postorder Traversal
(M) Binary Search Tree Iterator  (M) Kth Smallest Element in a BST  (H) Closest
Binary Search Tree Value II  (M) Inorder Successor in BST

******************************longest-palindrome
 Given a string which consists of lowercase or uppercase letters, find the
length of the longest palindromes that can be built with those letters.  This is
case sensitive, for example "Aa" is not considered a palindrome here.  Note:
Assume the length of given string will not exceed 1,010.  Example:  Input:
"abccccdd"
Output:
7
Explanation:
One longest palindrome that can be built is "dccaccd", whose length is 7.
Subscribe to see which companies asked this question    Show Tags   Hash Table
Show Similar Problems   (E) Palindrome Permutation

******************************sudoku-solver
 Write a program to solve a Sudoku puzzle by filling the empty cells.  Empty
cells are indicated by the character '.' .  You may assume that there will be
only one unique solution.    A sudoku puzzle...     ...and its solution numbers
marked in red.   Subscribe to see which companies asked this question    Show
Tags   Backtracking  Hash Table     Show Similar Problems   (E) Valid Sudoku

******************************insert-delete-getrandom-o1
 Design a data structure that supports all following operations in average  O(1)
time.    insert(val) : Inserts an item val to the set if not already present.
remove(val) : Removes an item val from the set if present.  getRandom : Returns
a random element from current set of elements. Each element must have the same
probability of being returned.    Example:  // Init an empty set.
RandomizedSet randomSet = new RandomizedSet();
// Inserts 1 to the set. Returns true as 1 was inserted successfully.
randomSet.insert(1);
// Returns false as 2 does not exist in the set.
randomSet.remove(2);
// Inserts 2 to the set, returns true. Set now contains [1,2].
randomSet.insert(2);
// getRandom should return either 1 or 2 randomly.
randomSet.getRandom();
// Removes 1 from the set, returns true. Set now contains [2].
randomSet.remove(1);
// 2 was already in the set, so return false.
randomSet.insert(2);
// Since 1 is the only number in the set, getRandom always return 1.
randomSet.getRandom();    Subscribe to see which companies asked this question
Show Tags   Array  Hash Table  Design     Show Similar Problems   (H) Insert
Delete GetRandom O(1) - Duplicates allowed

******************************single-number
 Given an array of integers, every element appears twice except for one. Find
that single one.   Note: Your algorithm should have a linear runtime complexity.
Could you implement it without using extra memory?   Subscribe to see which
companies asked this question    Show Tags   Hash Table  Bit Manipulation
Show Similar Problems   (M) Single Number II  (M) Single Number III  (M) Missing
Number  (H) Find the Duplicate Number  (E) Find the Difference

******************************two-sum
 Given an array of integers, return indices of the two numbers such that they
add up to a specific target.  You may assume that each input would have exactly
one solution.   Example:  Given nums = [2, 7, 11, 15], target = 9,
Because nums[ 0 ] + nums[ 1 ] = 2 + 7 = 9,
return [ 0 , 1 ].    UPDATE (2016/2/13): The return format had been changed to
zero-based indices. Please read the above updated description carefully.
Subscribe to see which companies asked this question    Show Tags   Array  Hash
Table     Show Similar Problems   (M) 3Sum  (M) 4Sum  (M) Two Sum II - Input
array is sorted  (E) Two Sum III - Data structure design

******************************intersection-of-two-arrays
 Given two arrays, write a function to compute their intersection.  Example:
Given nums1 = [1, 2, 2, 1] , nums2 = [2, 2] , return [2] .  Note:   Each element
in the result must be unique.  The result can be in any order.     Subscribe to
see which companies asked this question    Show Tags   Binary Search  Hash Table
Two Pointers  Sort     Show Similar Problems   (E) Intersection of Two Arrays II

******************************word-pattern
 Given a pattern and a string str , find if str follows the same pattern.  Here
follow means a full match, such that there is a bijection between a letter in
pattern and a non-empty word in str .   Examples:   pattern = "abba" , str =
"dog cat cat dog" should return true.  pattern = "abba" , str = "dog cat cat
fish" should return false.  pattern = "aaaa" , str = "dog cat cat dog" should
return false.  pattern = "abba" , str = "dog dog dog dog" should return false.
Notes: You may assume pattern contains only lowercase letters, and str contains
lowercase letters separated by a single space.  Credits: Special thanks to
@minglotus6 for adding this problem and creating all test cases.   Subscribe to
see which companies asked this question    Show Tags   Hash Table     Show
Similar Problems   (E) Isomorphic Strings  (H) Word Pattern II

******************************fraction-to-recurring-decimal
 Given two integers representing the numerator and denominator of a fraction,
return the fraction in string format.  If the fractional part is repeating,
enclose the repeating part in parentheses.  For example,  Given numerator = 1,
denominator = 2, return "0.5".  Given numerator = 2, denominator = 1, return
"2".  Given numerator = 2, denominator = 3, return "0.(6)".     No scary math,
just apply elementary math knowledge. Still remember how to perform a long
division ?  Try a long division on 4/9, the repeating part is obvious. Now try
4/333. Do you see a pattern?  Be wary of edge cases! List out as many test cases
as you can think of and test your code thoroughly.   Credits: Special thanks to
@Shangrila for adding this problem and creating all test cases.   Subscribe to
see which companies asked this question    Show Tags   Hash Table  Math

******************************count-primes
 Description:  Count the number of prime numbers less than a non-negative
number, n .  Credits: Special thanks to @mithmatt for adding this problem and
creating all test cases.   Let's start with a isPrime function. To determine if
a number is prime, we need to check if it is not divisible by any number less
than n . The runtime complexity of isPrime function would be O( n ) and hence
counting the total prime numbers up to n would be O( n 2 ). Could we do better?
As we know the number must not be divisible by any number > n / 2, we can
immediately cut the total iterations half by dividing only up to n / 2. Could we
still do better?   Let's write down all of 12's factors:  2 × 6 = 12
3 × 4 = 12
4 × 3 = 12
6 × 2 = 12  As you can see, calculations of 4 × 3 and 6 × 2 are not necessary.
Therefore, we only need to consider factors up to &radic; n because, if n is
divisible by some number p , then n = p × q and since p &le; q , we could derive
that p &le; &radic; n .  Our total runtime has now improved to O( n 1.5 ), which
is slightly better. Is there a faster approach?  public int countPrimes(int n) {
int count = 0;
for (int i = 1; i < n; i++) {
if (isPrime(i)) count++;
}
return count;
}
private boolean isPrime(int num) {
if (num <= 1) return false;
// Loop's ending condition is i * i <= num instead of i <= sqrt(num)
// to avoid repeatedly calling an expensive function sqrt().
for (int i = 2; i * i <= num; i++) {
if (num % i == 0) return false;
}
return true;
}   The Sieve of Eratosthenes is one of the most efficient ways to find all
prime numbers up to n . But don't let that name scare you, I promise that the
concept is surprisingly simple.    Sieve of Eratosthenes: algorithm steps for
primes below 121. " Sieve of Eratosthenes Animation " by SKopp is licensed under
CC BY 2.0 .   We start off with a table of n numbers. Let's look at the first
number, 2. We know all multiples of 2 must not be primes, so we mark them off as
non-primes. Then we look at the next number, 3. Similarly, all multiples of 3
such as 3 × 2 = 6, 3 × 3 = 9, ... must not be primes, so we mark them off as
well. Now we look at the next number, 4, which was already marked off. What does
this tell you? Should you mark off all multiples of 4 as well?   4 is not a
prime because it is divisible by 2, which means all multiples of 4 must also be
divisible by 2 and were already marked off. So we can skip 4 immediately and go
to the next number, 5. Now, all multiples of 5 such as 5 × 2 = 10, 5 × 3 = 15, 5
× 4 = 20, 5 × 5 = 25, ... can be marked off. There is a slight optimization
here, we do not need to start from 5 × 2 = 10. Where should we start marking
off?   In fact, we can mark off multiples of 5 starting at 5 × 5 = 25, because 5
× 2 = 10 was already marked off by multiple of 2, similarly 5 × 3 = 15 was
already marked off by multiple of 3. Therefore, if the current number is p , we
can always mark off multiples of p starting at p 2 , then in increments of p : p
2 + p , p 2 + 2 p , ... Now what should be the terminating loop condition?   It
is easy to say that the terminating loop condition is p < n , which is certainly
correct but not efficient. Do you still remember Hint #3 ?   Yes, the
terminating loop condition can be p < &radic; n , as all non-primes &ge; &radic;
n must have already been marked off. When the loop terminates, all the numbers
in the table that are non-marked are prime.  The Sieve of Eratosthenes uses an
extra O( n ) memory and its runtime complexity is O( n log log n ). For the more
mathematically inclined readers, you can read more about its algorithm
complexity on Wikipedia .  public int countPrimes(int n) {
boolean[] isPrime = new boolean[n];
for (int i = 2; i < n; i++) {
isPrime[i] = true;
}
// Loop's ending condition is i * i < n instead of i < sqrt(n)
// to avoid repeatedly calling an expensive function sqrt().
for (int i = 2; i * i < n; i++) {
if (!isPrime[i]) continue;
for (int j = i * i; j < n; j += i) {
isPrime[j] = false;
}
}
int count = 0;
for (int i = 2; i < n; i++) {
if (isPrime[i]) count++;
}
return count;
}     Subscribe to see which companies asked this question    Show Tags   Hash
Table  Math     Show Similar Problems   (E) Ugly Number  (M) Ugly Number II  (M)
Perfect Squares

******************************bulls-and-cows
 You are playing the following Bulls and Cows game with your friend: You write
down a number and ask your friend to guess what the number is. Each time your
friend makes a guess, you provide a hint that indicates how many digits in said
guess match your secret number exactly in both digit and position (called
"bulls") and how many digits match the secret number but locate in the wrong
position (called "cows"). Your friend will use successive guesses and hints to
eventually derive the secret number.  For example: Secret number:  "1807"
Friend's guess: "7810" Hint: 1 bull and 3 cows. (The bull is 8 , the cows are 0
, 1 and 7 .)  Write a function to return a hint according to the secret number
and friend's guess, use A to indicate the bulls and B to indicate the cows. In
the above example, your function should return "1A3B" .  Please note that both
secret number and friend's guess may contain duplicate digits, for example:
Secret number:  "1123"
Friend's guess: "0111" In this case, the 1st 1 in friend's guess is a bull, the
2nd or 3rd 1 is a cow, and your function should return "1A1B" .  You may assume
that the secret number and your friend's guess only contain digits, and their
lengths are always equal.  Credits: Special thanks to @jeantimex for adding this
problem and creating all test cases.   Subscribe to see which companies asked
this question    Show Tags   Hash Table

******************************substring-with-concatenation-of-all-words
 You are given a string, s , and a list of words, words , that are all of the
same length. Find all starting indices of substring(s) in s that is a
concatenation of each word in words exactly once and without any intervening
characters.  For example, given:  s : "barfoothefoobarman"  words : ["foo",
"bar"]   You should return the indices: [0,9] . (order does not matter).
Subscribe to see which companies asked this question    Show Tags   Hash Table
Two Pointers  String     Show Similar Problems   (H) Minimum Window Substring

******************************top-k-frequent-elements
 Given a non-empty array of integers, return the k most frequent elements.  For
example, Given [1,1,1,2,2,3] and k = 2, return [1,2] .  Note:   You may assume k
is always valid, 1 ≤ k ≤ number of unique elements.  Your algorithm's time
complexity must be better than O( n log n ), where n is the array's size.
Subscribe to see which companies asked this question    Show Tags   Hash Table
Heap     Show Similar Problems   (M) Word Frequency  (M) Kth Largest Element in
an Array

******************************design-twitter
 Design a simplified version of Twitter where users can post tweets,
follow/unfollow another user and is able to see the 10 most recent tweets in the
user's news feed. Your design should support the following methods:
postTweet(userId, tweetId) : Compose a new tweet.  getNewsFeed(userId) :
Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the
news feed must be posted by users who the user followed or by the user herself.
Tweets must be ordered from most recent to least recent.  follow(followerId,
followeeId) : Follower follows a followee.  unfollow(followerId, followeeId) :
Follower unfollows a followee.    Example:  Twitter twitter = new Twitter();
// User 1 posts a new tweet (id = 5).
twitter.postTweet(1, 5);
// User 1's news feed should return a list with 1 tweet id -> [5].
twitter.getNewsFeed(1);
// User 1 follows user 2.
twitter.follow(1, 2);
// User 2 posts a new tweet (id = 6).
twitter.postTweet(2, 6);
// User 1's news feed should return a list with 2 tweet ids -> [6, 5].
// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.
twitter.getNewsFeed(1);
// User 1 unfollows user 2.
twitter.unfollow(1, 2);
// User 1's news feed should return a list with 1 tweet id -> [5],
// since user 1 is no longer following user 2.
twitter.getNewsFeed(1);    Subscribe to see which companies asked this question
Show Tags   Hash Table  Heap  Design

******************************valid-anagram
 Given two strings s and t , write a function to determine if t is an anagram of
s .  For example,  s = "anagram", t = "nagaram", return true.  s = "rat", t =
"car", return false.  Note: You may assume the string contains only lowercase
alphabets.  Follow up: What if the inputs contain unicode characters? How would
you adapt your solution to such case?   Subscribe to see which companies asked
this question    Show Tags   Hash Table  Sort     Show Similar Problems   (M)
Group Anagrams  (E) Palindrome Permutation

******************************minimum-window-substring
 Given a string S and a string T, find the minimum window in S which will
contain all the characters in T in complexity O(n).  For example,  S =
"ADOBECODEBANC"  T = "ABC"   Minimum window is "BANC" .   Note: If there is no
such window in S that covers all characters in T, return the empty string "" .
If there are multiple such windows, you are guaranteed that there will always be
only one unique minimum window in S.   Subscribe to see which companies asked
this question    Show Tags   Hash Table  Two Pointers  String     Show Similar
Problems   (H) Substring with Concatenation of All Words  (M) Minimum Size
Subarray Sum  (H) Sliding Window Maximum

******************************max-points-on-a-line
 Given n points on a 2D plane, find the maximum number of points that lie on the
same straight line.   Subscribe to see which companies asked this question
Show Tags   Hash Table  Math     Show Similar Problems   (M) Line Reflection

******************************maximal-rectangle
 Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle
containing only 1's and return its area.  For example, given the following
matrix: 1 0 1 0 0
1 0 1  1  1 1 1 1  1  1 1 0 0 1 0 Return 6.   Subscribe to see which companies
asked this question    Show Tags   Array  Hash Table  Stack  Dynamic Programming
Show Similar Problems   (H) Largest Rectangle in Histogram  (M) Maximal Square

******************************h-index
 Given an array of citations (each citation is a non-negative integer) of a
researcher, write a function to compute the researcher's h-index.  According to
the definition of h-index on Wikipedia : "A scientist has index h if h of
his/her N papers have at least  h citations each, and the other N − h papers
have no more than  h citations each."  For example, given citations = [3, 0, 6,
1, 5] , which means the researcher has 5 papers in total and each of them had
received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers
with at least  3 citations each and the remaining two with no more than  3
citations each, his h-index is 3 .   Note : If there are several possible values
for h , the maximum one is taken as the h-index.   An easy approach is to sort
the array first.  What are the possible values of h-index?  A faster approach is
to use extra space.   Credits: Special thanks to @jianchao.li.fighter for adding
this problem and creating all test cases.   Subscribe to see which companies
asked this question    Show Tags   Hash Table  Sort     Show Similar Problems
(M) H-Index II

******************************contains-duplicate
 Given an array of integers, find if the array contains any duplicates. Your
function should return true if any value appears at least twice in the array,
and it should return false if every element is distinct.   Subscribe to see
which companies asked this question    Show Tags   Array  Hash Table     Show
Similar Problems   (E) Contains Duplicate II  (M) Contains Duplicate III

