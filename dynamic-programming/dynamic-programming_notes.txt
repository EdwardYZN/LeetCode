******************************palindrome-partitioning-ii
 Given a string s , partition s such that every substring of the partition is a
palindrome.  Return the minimum cuts needed for a palindrome partitioning of s .
For example, given s = "aab" , Return 1 since the palindrome partitioning
["aa","b"] could be produced using 1 cut.   Subscribe to see which companies
asked this question    Show Tags   Dynamic Programming     Show Similar Problems
(M) Palindrome Partitioning

******************************coin-change
 You are given coins of different denominations and a total amount of money
amount . Write a function to compute the fewest number of coins that you need to
make up that amount. If that amount of money cannot be made up by any
combination of the coins, return -1 .   Example 1: coins = [1, 2, 5] , amount =
11 return 3 (11 = 5 + 5 + 1)   Example 2: coins = [2] , amount = 3 return -1 .
Note : You may assume that you have an infinite number of each kind of coin.
Credits: Special thanks to @jianchao.li.fighter for adding this problem and
creating all test cases.   Subscribe to see which companies asked this question
Show Tags   Dynamic Programming

******************************partition-equal-subset-sum
 Given a non-empty array containing only positive integers , find if the array
can be partitioned into two subsets such that the sum of elements in both
subsets is equal.  Note: Both the array size and each of the array element will
not exceed 100.  Example 1:  Input: [1, 5, 11, 5]
Output: true
Explanation: The array can be partitioned as [1, 5, 5] and [11].   Example 2:
Input: [1, 2, 3, 5]
Output: false
Explanation: The array cannot be partitioned into equal sum subsets.
Subscribe to see which companies asked this question    Show Tags   Dynamic
Programming

******************************best-time-to-buy-and-sell-stock-iv
 Say you have an array for which the i th element is the price of a given stock
on day i .  Design an algorithm to find the maximum profit. You may complete at
most k transactions.  Note: You may not engage in multiple transactions at the
same time (ie, you must sell the stock before you buy again).  Credits: Special
thanks to @Freezen for adding this problem and creating all test cases.
Subscribe to see which companies asked this question    Show Tags   Dynamic
Programming     Show Similar Problems   (E) Best Time to Buy and Sell Stock  (M)
Best Time to Buy and Sell Stock II  (H) Best Time to Buy and Sell Stock III

******************************unique-binary-search-trees-ii
 Given an integer n , generate all structurally unique BST's (binary search
trees) that store values 1... n .  For example, Given n = 3, your program should
return all 5 unique BST's shown below. 1         3     3      2      1
\       /     /      / \      \
3     2     1      1   3      2
/     /       \                 \
2     1         2                 3    Subscribe to see which companies asked
this question    Show Tags   Tree  Dynamic Programming     Show Similar Problems
(M) Unique Binary Search Trees  (M) Different Ways to Add Parentheses

******************************best-time-to-buy-and-sell-stock-with-cooldown
 Say you have an array for which the i th element is the price of a given stock
on day i .  Design an algorithm to find the maximum profit. You may complete as
many transactions as you like
(ie, buy one and sell one share of the stock multiple times) with the following
restrictions:   You may not engage in multiple transactions at the same time
(ie, you must sell the stock before you buy again).  After you sell your stock,
you cannot buy stock on next day. (ie, cooldown 1 day)   Example:  prices = [1,
2, 3, 0, 2]
maxProfit = 3
transactions = [buy, sell, cooldown, buy, sell]  Credits: Special thanks to
@dietpepsi for adding this problem and creating all test cases.   Subscribe to
see which companies asked this question    Show Tags   Dynamic Programming
Show Similar Problems   (E) Best Time to Buy and Sell Stock  (M) Best Time to
Buy and Sell Stock II

******************************integer-break
 Given a positive integer n , break it into the sum of at least two positive
integers and maximize the product of those integers. Return the maximum product
you can get.  For example, given n = 2, return 1 (2 = 1 + 1); given n = 10,
return 36 (10 = 3 + 3 + 4).   Note : You may assume that n is not less than 2
and not larger than 58.   There is a simple O(n) solution to this problem.  You
may check the breaking results of n ranging from 7 to 10 to discover the
regularities.   Credits: Special thanks to @jianchao.li.fighter for adding this
problem and creating all test cases.   Subscribe to see which companies asked
this question    Show Tags   Dynamic Programming  Math

******************************house-robber
 You are a professional robber planning to rob houses along a street. Each house
has a certain amount of money stashed, the only constraint stopping you from
robbing each of them is that adjacent houses have security system connected and
it will automatically contact the police if two adjacent houses were broken into
on the same night .  Given a list of non-negative integers representing the
amount of money of each house, determine the maximum amount of money you can rob
tonight without alerting the police .  Credits: Special thanks to @ifanchu for
adding this problem and creating all test cases. Also thanks to @ts for adding
additional test cases.   Subscribe to see which companies asked this question
Show Tags   Dynamic Programming     Show Similar Problems   (M) Maximum Product
Subarray  (M) House Robber II  (M) Paint House  (E) Paint Fence  (M) House
Robber III

******************************unique-paths-ii
 Follow up for "Unique Paths":  Now consider if some obstacles are added to the
grids. How many unique paths would there be?  An obstacle and empty space is
marked as 1 and 0 respectively in the grid.  For example,  There is one obstacle
in the middle of a 3x3 grid as illustrated below.  [
[0,0,0],
[0,1,0],
[0,0,0]
]  The total number of unique paths is 2 .  Note:  m and n will be at most 100.
Subscribe to see which companies asked this question    Show Tags   Array
Dynamic Programming     Show Similar Problems   (M) Unique Paths

******************************distinct-subsequences
 Given a string S and a string T , count the number of distinct subsequences of
T in S .  A subsequence of a string is a new string which is formed from the
original string by deleting some (can be none) of the characters without
disturbing the relative positions of the remaining characters. (ie, "ACE" is a
subsequence of "ABCDE" while "AEC" is not).  Here is an example:  S = "rabbbit"
, T = "rabbit"   Return 3 .   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  String

******************************best-time-to-buy-and-sell-stock
 Say you have an array for which the i th element is the price of a given stock
on day i .  If you were only permitted to complete at most one transaction (ie,
buy one and sell one share of the stock), design an algorithm to find the
maximum profit.  Example 1:  Input: [7, 1, 5, 3, 6, 4]
Output: 5
max. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than
buying price)   Example 2:  Input: [7, 6, 4, 3, 1]
Output: 0
In this case, no transaction is done, i.e. max profit = 0.    Subscribe to see
which companies asked this question    Show Tags   Array  Dynamic Programming
Show Similar Problems   (M) Maximum Subarray  (M) Best Time to Buy and Sell
Stock II  (H) Best Time to Buy and Sell Stock III  (H) Best Time to Buy and Sell
Stock IV  (M) Best Time to Buy and Sell Stock with Cooldown

******************************frog-jump
 A frog is crossing a river. The river is divided into x units and at each unit
there may or may not exist a stone. The frog can jump on a stone, but it must
not jump into the water.  Given a list of stones' positions (in units) in sorted
ascending order, determine if the frog is able to cross the river by landing on
the last stone. Initially, the frog is on the first stone and assume the first
jump must be 1 unit.  If the frog's last jump was k units, then its next jump
must be either k - 1, k , or k + 1 units. Note that the frog can only jump in
the forward direction.  Note:   The number of stones is &ge; 2 and is < 1,100.
Each stone's position will be a non-negative integer < 2 31 .  The first stone's
position is always 0.    Example 1:   [0,1,3,5,6,8,12,17] There are a total of 8
stones.
The first stone at the 0th unit, second stone at the 1st unit,
third stone at the 3rd unit, and so on...
The last stone at the 17th unit. Return true . The frog can jump to the last
stone by jumping
1 unit to the 2nd stone, then 2 units to the 3rd stone, then
2 units to the 4th stone, then 3 units to the 6th stone,
4 units to the 7th stone, and 5 units to the 8th stone.   Example 2:
[0,1,2,3,4,8,9,11]  Return false . There is no way to jump to the last stone as
the gap between the 5th and 6th stone is too large.    Subscribe to see which
companies asked this question    Show Tags   Dynamic Programming

******************************maximum-subarray
 Find the contiguous subarray within an array (containing at least one number)
which has the largest sum.  For example, given the array [-2,1,-3,4,-1,2,1,-5,4]
, the contiguous subarray [4,-1,2,1] has the largest sum = 6 .  click to show
more practice.  More practice:  If you have figured out the O( n ) solution, try
coding another solution using the divide and conquer approach, which is more
subtle.    Subscribe to see which companies asked this question    Show Tags
Array  Dynamic Programming  Divide and Conquer     Show Similar Problems   (E)
Best Time to Buy and Sell Stock  (M) Maximum Product Subarray

******************************edit-distance
 Given two words word1 and word2 , find the minimum number of steps required to
convert word1 to word2 . (each operation is counted as 1 step.)  You have the
following 3 operations permitted on a word:  a) Insert a character b) Delete a
character c) Replace a character    Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  String     Show Similar Problems
(M) One Edit Distance

******************************is-subsequence
 Given a string s and a string t , check if s is subsequence of t .  You may
assume that there is only lower case English letters in both s and t . t is
potentially a very long (length ~= 500,000) string, and s is a short string
(<=100).  A subsequence of a string is a new string which is formed from the
original string by deleting some (can be none) of the characters without
disturbing the relative positions of the remaining characters. (ie, "ace" is a
subsequence of "abcde" while "aec" is not).  Example 1:  s = "abc" , t =
"ahbgdc"   Return true .  Example 2:  s = "axc" , t = "ahbgdc"   Return false .
Follow up: If there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B,
and you want to check one by one to see if T has its subsequence. In this
scenario, how would you change your code?  Credits: Special thanks to @pbrother
for adding this problem and creating all test cases.   Subscribe to see which
companies asked this question    Show Tags   Binary Search  Dynamic Programming
Greedy

******************************dungeon-game
 table.dungeon, .dungeon th, .dungeon td {
border:3px solid black;
}
.dungeon th, .dungeon td {
text-align: center;
height: 70px;
width: 70px;
}  The demons had captured the princess ( P ) and imprisoned her in the bottom-
right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D
grid. Our valiant knight ( K ) was initially positioned in the top-left room and
must fight his way through the dungeon to rescue the princess.  The knight has
an initial health point represented by a positive integer. If at any point his
health point drops to 0 or below, he dies immediately.  Some of the rooms are
guarded by demons, so the knight loses health ( negative integers) upon entering
these rooms;
other rooms are either empty ( 0's ) or contain magic orbs that increase the
knight's health ( positive integers).  In order to reach the princess as quickly
as possible, the knight decides to move only rightward or downward in each step.
Write a function to determine the knight's minimum initial health so that he is
able to rescue the princess.  For example, given the dungeon below, the initial
health of the knight must be at least 7 if he follows the optimal path RIGHT->
RIGHT -> DOWN -> DOWN .    -2 (K)  -3  3    -5  -10  1    10  30  -5 (P)    -2K
-3  3
-5   -10   1
10 30   5P   Notes:   The knight's health has no upper bound.  Any room can
contain threats or power-ups, even the first room the knight enters and the
bottom-right room where the princess is imprisoned.    Credits: Special thanks
to @stellari for adding this problem and creating all test cases.   Subscribe to
see which companies asked this question    Show Tags   Binary Search  Dynamic
Programming     Show Similar Problems   (M) Unique Paths  (M) Minimum Path Sum

******************************range-sum-query-2d-immutable
 Given a 2D matrix matrix , find the sum of the elements inside the rectangle
defined by its upper left corner ( row 1, col 1) and lower right corner ( row 2,
col 2).    The above rectangle (with the red border) is defined by (row1, col1)
= (2, 1) and (row2, col2) = (4, 3) , which contains sum = 8 .   Example:  Given
matrix = [
[3, 0, 1, 4, 2],
[5, 6, 3, 2, 1],
[1, 2, 0, 1, 5],
[4, 1, 0, 1, 7],
[1, 0, 3, 0, 5]
]
sumRegion(2, 1, 4, 3) -> 8
sumRegion(1, 1, 2, 2) -> 11
sumRegion(1, 2, 2, 4) -> 12   Note:   You may assume that the matrix does not
change.  There are many calls to sumRegion function.  You may assume that row 1
&le; row 2 and col 1 &le; col 2.     Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming     Show Similar Problems   (E)
Range Sum Query - Immutable  (H) Range Sum Query 2D - Mutable

******************************create-maximum-number
 Given two arrays of length m and n with digits 0-9 representing two numbers.
Create the maximum number of length k <= m + n from digits of the two. The
relative order of the digits
from the same array must be preserved. Return an array of the k digits. You
should try to optimize your time and space complexity.   Example 1:   nums1 =
[3, 4, 6, 5] nums2 = [9, 1, 2, 5, 8, 3] k = 5 return [9, 8, 6, 5, 3]    Example
2:   nums1 = [6, 7] nums2 = [6, 0, 4] k = 5 return [6, 7, 6, 0, 4]    Example 3:
nums1 = [3, 9] nums2 = [8, 9] k = 3 return [9, 8, 9]   Credits: Special thanks
to @dietpepsi for adding this problem and creating all test cases.   Subscribe
to see which companies asked this question    Show Tags   Dynamic Programming
Greedy     Show Similar Problems   (M) Remove K Digits

******************************unique-binary-search-trees
 Given n , how many structurally unique BST's (binary search trees) that store
values 1... n ?  For example, Given n = 3, there are a total of 5 unique BST's.
1         3     3      2      1
\       /     /      / \      \
3     2     1      1   3      2
/     /       \                 \
2     1         2                 3    Subscribe to see which companies asked
this question    Show Tags   Tree  Dynamic Programming     Show Similar Problems
(M) Unique Binary Search Trees II

******************************russian-doll-envelopes
 You have a number of envelopes with widths and heights given as a pair of
integers (w, h) . One envelope can fit into another if and only if both the
width and height of one envelope is greater than the width and height of the
other envelope.  What is the maximum number of envelopes can you Russian doll?
(put one inside other)  Example: Given envelopes = [[5,4],[6,4],[6,7],[2,3]] ,
the maximum number of envelopes you can Russian doll is 3 ([2,3] => [5,4] =>
[6,7]).   Subscribe to see which companies asked this question    Show Tags
Binary Search  Dynamic Programming     Show Similar Problems   (M) Longest
Increasing Subsequence

******************************maximal-square
 Given a 2D binary matrix filled with 0's and 1's, find the largest square
containing only 1's and return its area.  For example, given the following
matrix: 1 0 1 0 0
1 0 1  1 1
1 1 1  1 1
1 0 0 1 0 Return 4.  Credits: Special thanks to @Freezen for adding this problem
and creating all test cases.   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming     Show Similar Problems   (H)
Maximal Rectangle

******************************counting-bits
 Given a non negative integer number num . For every numbers i in the range 0
&le; i &le; num calculate the number of 1's in their binary representation and
return them as an array.   Example: For num = 5 you should return [0,1,1,2,1,2]
.   Follow up:   It is very easy to come up with a solution with run time
O(n*sizeof(integer)) . But can you do it in linear time O(n) /possibly in a
single pass?  Space complexity should be O(n) .  Can you do it like a boss? Do
it without using any builtin function like __builtin_popcount in c++ or in any
other language.     You should make use of what you have produced already.
Divide the numbers in ranges like [2-3], [4-7], [8-15] and so on. And try to
generate new range from previous.  Or does the odd/even status of the number
help you in calculating the number of 1s?   Credits: Special thanks to @ syedee
for adding this problem and creating all test cases.   Subscribe to see which
companies asked this question    Show Tags   Dynamic Programming  Bit
Manipulation     Show Similar Problems   (E) Number of 1 Bits

******************************max-sum-of-sub-matrix-no-larger-than-k
 Given a non-empty 2D matrix matrix and an integer k , find the max sum of a
rectangle in the matrix such that its sum is no larger than k .  Example:  Given
matrix = [
[1,  0, 1],
[0, -2, 3]
]
k = 2   The answer is 2 . Because the sum of rectangle [[0, 1], [-2, 3]] is 2
and 2 is the max number no larger than k (k = 2).  Note:   The rectangle inside
the matrix must have an area > 0.  What if the number of rows is much larger
than the number of columns?    Credits: Special thanks to @fujiaozhu for adding
this problem and creating all test cases.   Subscribe to see which companies
asked this question    Show Tags   Binary Search  Dynamic Programming  Queue

******************************climbing-stairs
 You are climbing a stair case. It takes n steps to reach to the top.  Each time
you can either climb 1 or 2 steps. In how many distinct ways can you climb to
the top?   Subscribe to see which companies asked this question    Show Tags
Dynamic Programming

******************************unique-paths
 A robot is located at the top-left corner of a m x n grid (marked 'Start' in
the diagram below).  The robot can only move either down or right at any point
in time. The robot is trying to reach the bottom-right corner of the grid
(marked 'Finish' in the diagram below).  How many possible unique paths are
there?    Above is a 3 x 7 grid. How many possible unique paths are there?
Note:  m and n will be at most 100.   Subscribe to see which companies asked
this question    Show Tags   Array  Dynamic Programming     Show Similar
Problems   (M) Unique Paths II  (M) Minimum Path Sum  (H) Dungeon Game

******************************largest-divisible-subset
 Given a set of distinct positive integers, find the largest subset such that
every pair (S i , S j ) of elements in this subset satisfies: S i % S j = 0 or S
j % S i = 0.  If there are multiple solutions, return any subset is fine.
Example 1:  nums: [1,2,3]
Result: [1,2] (of course, [1,3] will also be ok)   Example 2:  nums: [1,2,4,8]
Result: [1,2,4,8]   Credits: Special thanks to @Stomach_ache for adding this
problem and creating all test cases.   Subscribe to see which companies asked
this question    Show Tags   Dynamic Programming  Math

******************************guess-number-higher-or-lower-ii
 We are playing the Guess Game. The game is as follows:  I pick a number from 1
to n . You have to guess which number I picked.  Every time you guess wrong,
I'll tell you whether the number I picked is higher or lower.  However, when you
guess a particular number x,  and you guess wrong, you pay $x . You win the game
when you guess the number I picked.   Example:  n = 10, I pick 8.
First round:  You guess 5, I tell you that it's higher. You pay $5.
Second round: You guess 7, I tell you that it's higher. You pay $7.
Third round:  You guess 9, I tell you that it's lower. You pay $9.
Game over. 8 is the number I picked.
You end up paying $5 + $7 + $9 = $21.   Given a particular n &ge; 1 , find out
how much money you need to have to guarantee a win .   The best strategy to play
the game is to minimize the maximum loss you could possibly face. Another
strategy is to minimize the expected loss. Here, we are interested in the first
scenario.  Take a small example (n = 3). What do you end up paying in the worst
case?  Check out this article if you're still stuck.  The purely recursive
implementation of minimax would be worthless for even a small n. You MUST use
dynamic programming.  As a follow-up, how would you modify your code to solve
the problem of minimizing the expected loss, instead of the worst-case loss?
Credits: Special thanks to @agave and @StefanPochmann for adding this problem
and creating all test cases.   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming     Show Similar Problems   (M) Flip
Game II  (E) Guess Number Higher or Lower

******************************triangle
 Given a triangle, find the minimum path sum from top to bottom. Each step you
may move to adjacent numbers on the row below.  For example, given the following
triangle  [
[ 2 ],
[ 3 ,4],
[6, 5 ,7],
[4, 1 ,8,3]
]   The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).
Note: Bonus point if you are able to do this using only O ( n ) extra space,
where n is the total number of rows in the triangle.   Subscribe to see which
companies asked this question    Show Tags   Array  Dynamic Programming

******************************regular-expression-matching
 Implement regular expression matching with support for '.' and '*' .  '.'
Matches any single character.
'*' Matches zero or more of the preceding element.
The matching should cover the entire input string (not partial).
The function prototype should be:
bool isMatch(const char *s, const char *p)
Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "a*") → true
isMatch("aa", ".*") → true
isMatch("ab", ".*") → true
isMatch("aab", "c*a*b") → true   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  Backtracking  String     Show
Similar Problems   (H) Wildcard Matching

******************************range-sum-query-immutable
 Given an integer array nums , find the sum of the elements between indices i
and j ( i &le; j ), inclusive.  Example:  Given nums = [-2, 0, 3, -5, 2, -1]
sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3   Note:   You may assume that the array does not change.
There are many calls to sumRange function.     Subscribe to see which companies
asked this question    Show Tags   Dynamic Programming     Show Similar Problems
(M) Range Sum Query 2D - Immutable  (M) Range Sum Query - Mutable  (M) Maximum
Size Subarray Sum Equals k

******************************count-numbers-with-unique-digits
 Given a non-negative integer n, count all numbers with unique digits, x, where
0 &le; x &lt; 10 n .   Example: Given n = 2, return 91. (The answer should be
the total numbers in the range of 0 &le; x &lt; 100, excluding
[11,22,33,44,55,66,77,88,99] )   A direct way is to use the backtracking
approach.  Backtracking should contains three states which are (the current
number, number of steps to get that number and a bitmask which represent which
number is marked as visited so far in the current number). Start with state
(0,0,0) and count all valid number till we reach number of steps equals to 10 n
.  This problem can also be solved using a dynamic programming approach and some
knowledge of combinatorics.  Let f(k) = count of numbers with unique digits with
length equals k.  f(1) = 10, ..., f(k) = 9 * 9 * 8 * ... (9 - k + 2) [The first
factor is 9 because a number cannot start with 0].   Credits: Special thanks to
@memoryless for adding this problem and creating all test cases.   Subscribe to
see which companies asked this question    Show Tags   Dynamic Programming
Backtracking  Math

******************************perfect-squares
 Given a positive integer n , find the least number of perfect square numbers
(for example, 1, 4, 9, 16, ... ) which sum to n .  For example, given n = 12 ,
return 3 because 12 = 4 + 4 + 4 ; given n = 13 , return 2 because 13 = 4 + 9 .
Credits: Special thanks to @jianchao.li.fighter for adding this problem and
creating all test cases.   Subscribe to see which companies asked this question
Show Tags   Dynamic Programming  Breadth-first Search  Math     Show Similar
Problems   (E) Count Primes  (M) Ugly Number II

******************************scramble-string
 Given a string s1 , we may represent it as a binary tree by partitioning it to
two non-empty substrings recursively.  Below is one possible representation of
s1 = "great" :  great
/    \
gr    eat
/ \    /  \
g   r  e   at
/ \
a   t  To scramble the string, we may choose any non-leaf node and swap its two
children.  For example, if we choose the node "gr" and swap its two children, it
produces a scrambled string "rgeat" .  rgeat
/    \
rg    eat
/ \    /  \
r   g  e   at
/ \
a   t  We say that "rgeat" is a scrambled string of "great" .  Similarly, if we
continue to swap the children of nodes "eat" and "at" , it produces a scrambled
string "rgtae" .  rgtae
/    \
rg    tae
/ \    /  \
r   g  ta  e
/ \
t   a  We say that "rgtae" is a scrambled string of "great" .  Given two strings
s1 and s2 of the same length, determine if s2 is a scrambled string of s1 .
Subscribe to see which companies asked this question    Show Tags   Dynamic
Programming  String

******************************maximum-product-subarray
 Find the contiguous subarray within an array (containing at least one number)
which has the largest product.  For example, given the array [2,3,-2,4] , the
contiguous subarray [2,3] has the largest product = 6 .   Subscribe to see which
companies asked this question    Show Tags   Array  Dynamic Programming     Show
Similar Problems   (M) Maximum Subarray  (E) House Robber  (M) Product of Array
Except Self

******************************longest-valid-parentheses
 Given a string containing just the characters '(' and ')' , find the length of
the longest valid (well-formed) parentheses substring.  For "(()" , the longest
valid parentheses substring is "()" , which has length = 2.  Another example is
")()())" , where the longest valid parentheses substring is "()()" , which has
length = 4.   Subscribe to see which companies asked this question    Show Tags
Dynamic Programming  String     Show Similar Problems   (E) Valid Parentheses

******************************combination-sum-iv
 Given an integer array with all positive numbers and no duplicates, find the
number of possible combinations that add up to a positive integer target.
Example:   nums = [1, 2, 3] target = 4
The possible combination ways are:
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)
Note that different sequences are counted as different combinations.
Therefore the output is 7 .   Follow up: What if negative numbers are allowed in
the given array? How does it change the problem? What limitation we need to add
to the question to allow negative numbers?  Credits: Special thanks to @pbrother
for adding this problem and creating all test cases.   Subscribe to see which
companies asked this question    Show Tags   Dynamic Programming     Show
Similar Problems   (M) Combination Sum

******************************interleaving-string
 Given s1 , s2 , s3 , find whether s3 is formed by the interleaving of s1 and s2
.  For example, Given:  s1 = "aabcc" ,  s2 = "dbbca" ,  When s3 = "aadbbcbcac" ,
return true. When s3 = "aadbbbaccc" , return false.   Subscribe to see which
companies asked this question    Show Tags   Dynamic Programming  String

******************************arithmetic-slices
 A sequence of number is called arithmetic if it consists of at least three
elements and if the difference between any two consecutive elements is the same.
For example, these are arithmetic sequence:  1, 3, 5, 7, 9
7, 7, 7, 7
3, -1, -5, -9  The following sequence is not arithmetic.  1, 1, 2, 5, 7   A
zero-indexed array A consisting of N numbers is given. A slice of that array is
any pair of integers (P, Q) such that 0 <= P < Q < N.  A slice (P, Q) of array A
is called arithmetic if the sequence: A[P], A[p + 1], ..., A[Q - 1], A[Q] is
arithmetic. In particular, this means that P + 1 < Q.  The function should
return the number of arithmetic slices in the array A.   Example:  A = [1, 2, 3,
4]
return: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4]
itself.   Subscribe to see which companies asked this question    Show Tags
Dynamic Programming  Math

******************************minimum-path-sum
 Given a m x n grid filled with non-negative numbers, find a path from top left
to bottom right which minimizes the sum of all numbers along its path.  Note:
You can only move either down or right at any point in time.   Subscribe to see
which companies asked this question    Show Tags   Array  Dynamic Programming
Show Similar Problems   (M) Unique Paths  (H) Dungeon Game

******************************wildcard-matching
 Implement wildcard pattern matching with support for '?' and '*' .  '?' Matches
any single character.
'*' Matches any sequence of characters (including the empty sequence).
The matching should cover the entire input string (not partial).
The function prototype should be:
bool isMatch(const char *s, const char *p)
Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "*") → true
isMatch("aa", "a*") → true
isMatch("ab", "?*") → true
isMatch("aab", "c*a*b") → false   Subscribe to see which companies asked this
question    Show Tags   Dynamic Programming  Backtracking  Greedy  String
Show Similar Problems   (H) Regular Expression Matching

******************************best-time-to-buy-and-sell-stock-iii
 Say you have an array for which the i th element is the price of a given stock
on day i .  Design an algorithm to find the maximum profit. You may complete at
most two transactions.  Note: You may not engage in multiple transactions at the
same time (ie, you must sell the stock before you buy again).   Subscribe to see
which companies asked this question    Show Tags   Array  Dynamic Programming
Show Similar Problems   (E) Best Time to Buy and Sell Stock  (M) Best Time to
Buy and Sell Stock II  (H) Best Time to Buy and Sell Stock IV

******************************longest-increasing-subsequence
 Given an unsorted array of integers, find the length of longest increasing
subsequence.  For example, Given [10, 9, 2, 5, 3, 7, 101, 18] , The longest
increasing subsequence is [2, 3, 7, 101] , therefore the length is 4 . Note that
there may be more than one LIS combination, it is only necessary for you to
return the length.  Your algorithm should run in O( n 2 ) complexity.  Follow
up: Could you improve it to O( n log n ) time complexity?  Credits: Special
thanks to @pbrother for adding this problem and creating all test cases.
Subscribe to see which companies asked this question    Show Tags   Dynamic
Programming  Binary Search     Show Similar Problems   (M) Increasing Triplet
Subsequence  (H) Russian Doll Envelopes

******************************house-robber-ii
 Note: This is an extension of House Robber .  After robbing those houses on
that street, the thief has found himself a new place for his thievery so that he
will not get too much attention. This time, all houses at this place are
arranged in a circle. That means the first house is the neighbor of the last
one. Meanwhile, the security system for these houses remain the same as for
those in the previous street.  Given a list of non-negative integers
representing the amount of money of each house, determine the maximum amount of
money you can rob tonight without alerting the police .  Credits: Special thanks
to @Freezen for adding this problem and creating all test cases.   Subscribe to
see which companies asked this question    Show Tags   Dynamic Programming
Show Similar Problems   (E) House Robber  (M) Paint House  (E) Paint Fence  (M)
House Robber III

******************************decode-ways
 A message containing letters from A-Z is being encoded to numbers using the
following mapping:  'A' -> 1
'B' -> 2
...
'Z' -> 26  Given an encoded message containing digits, determine the total
number of ways to decode it.  For example, Given encoded message "12" ,
it could be decoded as "AB" (1 2) or "L" (12).  The number of ways decoding "12"
is 2.   Subscribe to see which companies asked this question    Show Tags
Dynamic Programming  String

******************************ugly-number-ii
 Write a program to find the n -th ugly number.  Ugly numbers are positive
numbers whose prime factors only include 2, 3, 5 . For example, 1, 2, 3, 4, 5,
6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.  Note that 1 is
typically treated as an ugly number.   The naive approach is to call isUgly for
every number until you reach the n th one. Most numbers are not ugly. Try to
focus your effort on generating only the ugly ones.  An ugly number must be
multiplied by either 2, 3, or 5 from a smaller ugly number.  The key is how to
maintain the order of the ugly numbers. Try a similar approach of merging from
three sorted lists: L 1 , L 2 , and L 3 .  Assume you have U k , the k th ugly
number. Then U k+1 must be Min(L 1 * 2, L 2 * 3, L 3 * 5).   Credits: Special
thanks to @jianchao.li.fighter for adding this problem and creating all test
cases.   Subscribe to see which companies asked this question    Show Tags
Dynamic Programming  Heap  Math     Show Similar Problems   (H) Merge k Sorted
Lists  (E) Count Primes  (E) Ugly Number  (M) Perfect Squares  (M) Super Ugly
Number

******************************maximal-rectangle
 Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle
containing only 1's and return its area.  For example, given the following
matrix: 1 0 1 0 0
1 0 1  1  1 1 1 1  1  1 1 0 0 1 0 Return 6.   Subscribe to see which companies
asked this question    Show Tags   Array  Hash Table  Stack  Dynamic Programming
Show Similar Problems   (H) Largest Rectangle in Histogram  (M) Maximal Square

******************************word-break-ii
 Given a string s and a dictionary of words dict , add spaces in s to construct
a sentence where each word is a valid dictionary word.  Return all such possible
sentences.  For example, given  s = "catsanddog" ,  dict = ["cat", "cats",
"and", "sand", "dog"] .  A solution is ["cats and dog", "cat sand dog"] .
Subscribe to see which companies asked this question    Show Tags   Dynamic
Programming  Backtracking

******************************wiggle-subsequence
 A sequence of numbers is called a wiggle sequence if the differences between
successive numbers strictly alternate between positive and negative. The first
difference (if one exists) may be either positive or negative. A sequence with
fewer than two elements is trivially a wiggle sequence.  For example,
[1,7,4,9,2,5] is a wiggle sequence because the differences (6,-3,5,-7,3) are
alternately positive and negative. In contrast, [1,4,7,2,5] and [1,7,4,5,5] are
not wiggle sequences, the first because its first two differences are positive
and the second because its last difference is zero.  Given a sequence of
integers, return the length of the longest subsequence that is a wiggle
sequence. A subsequence is obtained by deleting some number of elements
(eventually, also zero) from the original sequence, leaving the remaining
elements in their original order.  Examples:   Input: [1,7,4,9,2,5] Output: 6
The entire sequence is a wiggle sequence. Input: [1,17,5,10,13,15,10,5,16,8]
Output: 7
There are several subsequences that achieve this length. One is
[1,17,10,13,10,16,8]. Input: [1,2,3,4,5,6,7,8,9] Output: 2   Follow up: Can you
do it in O( n ) time?  Credits: Special thanks to @agave and @StefanPochmann for
adding this problem and creating all test cases.   Subscribe to see which
companies asked this question    Show Tags   Dynamic Programming  Greedy

******************************burst-balloons
 Given n balloons, indexed from 0 to n-1 . Each balloon is painted with a
number on it represented by array nums .
You are asked to burst all the balloons. If the you burst
balloon i you will get nums[left] * nums[i] * nums[right] coins. Here left and
right are adjacent indices of i . After the burst, the left and right then
becomes adjacent.  Find the maximum coins you can collect by bursting the
balloons wisely.   Note:  (1) You may imagine nums[-1] = nums[n] = 1 . They are
not real therefore you can not burst them. (2) 0 &le; n &le; 500, 0 &le; nums[i]
&le; 100   Example:   Given [3, 1, 5, 8]   Return 167   nums = [3,1,5,8] -->
[3,5,8] -->   [3,8]   -->  [8]  --> []
coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167  Credits: Special
thanks to @dietpepsi for adding this problem and creating all test cases.
Subscribe to see which companies asked this question    Show Tags   Dynamic
Programming  Divide and Conquer

******************************split-array-largest-sum
 Given an array which consists of non-negative integers and an integer m , you
can split the array into m non-empty continuous subarrays. Write an algorithm to
minimize the largest sum among these m subarrays.  Note: Given m satisfies the
following constraint: 1 &le; m &le;  length(nums) &le; 14,000.  Examples:
Input: nums = [7,2,5,10,8] m = 2
Output:
18
Explanation:
There are four ways to split nums into two subarrays.
The best way is to split it into [7,2,5] and [10,8] ,
where the largest sum among the two subarrays is only 18.    Subscribe to see
which companies asked this question    Show Tags   Binary Search  Dynamic
Programming

